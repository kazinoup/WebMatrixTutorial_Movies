<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Data.SqlServerCe</name>
  </assembly>
  <members>
    <member name="T:System.Data.SqlServerCe.AddOption">
      <summary>サブスクリプションを既存のデータベースに追加するか、またはサブスクリプションの追加時にデータベースを新規作成するかを決定します。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.AddOption.ExistingDatabase">
      <summary>接続文字列で定義されている既存のデータベースにサブスクリプションが追加されます。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.AddOption.CreateDatabase">
      <summary>サブスクリプションの作成時に SQL Server Compact 4.0 データベースが新規作成されます。</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.CommitMode">
      <summary>
        <see cref="M:System.Data.SqlServerCe.SqlCeTransaction.Commit" /> 関数に CommitMode を渡すと、コミットの発生タイミングが指定されます。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.CommitMode.Deferred">
      <summary>ユーザーが指定したフラッシュ間隔が経過した後に、変更がディスクにコミットされます。既定のフラッシュ間隔は、10 秒です。ただし、これは、<see cref="P:System.Data.SqlServerCe.SqlCeConnection.ConnectionString" /> 内で変更できます。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.CommitMode.Immediate">
      <summary>変更がすぐにコミットされます。</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.DbInsertOptions">
      <summary>
        <see cref="System.Data.SqlServerCe.SqlCeResultSet.Insert" /> メソッドの使用時に使用するオプションを指定します。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbInsertOptions.KeepCurrentPosition">
      <summary>新しい行の追加後に、現在の位置のまま維持します。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbInsertOptions.PositionOnInsertedRow">
      <summary>新しく挿入した行にカーソルを移動します。</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.DbRangeOptions">
      <summary>シークするインデックスの範囲を指定する場合は、<see cref="M:System.Data.SqlServerCe.SqlCeCommand.SetRange(System.Data.SqlServerCe.DbRangeOptions,System.Object[],System.Object[])" /> メソッドで使用するオプションを指定します。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbRangeOptions.InclusiveStart">
      <summary>範囲に startData 値を含めます。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbRangeOptions.InclusiveEnd">
      <summary>範囲に endData 値を含めます。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbRangeOptions.ExclusiveStart">
      <summary>範囲から startData 値を除外します。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbRangeOptions.ExclusiveEnd">
      <summary>範囲から endData 値を除外します。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbRangeOptions.ExcludeNulls">
      <summary>範囲から null 値を除外します。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbRangeOptions.Prefix">
      <summary>インデックス値が startData の値で始まる範囲を指定します。Prefix オプションを使用する場合は、endData を null に設定する必要があります。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbRangeOptions.Match">
      <summary>インデックス値と startData の値が一致する範囲を指定します。Match オプションを使用する場合は、endData を null に設定する必要があります。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbRangeOptions.Default">
      <summary>
        <see cref="F:System.Data.SqlServerCe.DbRangeOptions.InclusiveStart" /> フラグと <see cref="F:System.Data.SqlServerCe.DbRangeOptions.InclusiveEnd" /> フラグの両方を設定するのと同じです。</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.DbSeekOptions">
      <summary>
        <see cref="M:System.Data.SqlServerCe.SqlCeDataReader.Seek(System.Data.SqlServerCe.DbSeekOptions,System.Object[])" /> メソッドの、インデックスに対するシーク方法を指定するオプション。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbSeekOptions.FirstEqual">
      <summary>インデックス順で、インデックスが最初に一致する行に進みます。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbSeekOptions.LastEqual">
      <summary>インデックス順で、インデックスが最後に一致する行に進みます。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbSeekOptions.AfterEqual">
      <summary>インデックスが一致する最後の行に進みます。一致する行がない場合は、シーク値よりもインデックス順で後の値を持つ最初の行に進みます。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbSeekOptions.After">
      <summary>インデックス順で、シーク値よりも後にあり、値を持つ最初の行に進みます。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbSeekOptions.BeforeEqual">
      <summary>インデックスが一致する最初の行に進みます。一致する行がない場合、シーク値よりもインデックス順で前の値を持つ最初の行に進みます。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbSeekOptions.Before">
      <summary>インデックス順で、シーク値よりも前にあり、値を持つ最後の行に進みます。</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.DropOption">
      <summary>
        <see cref="M:System.Data.SqlServerCe.SqlCeReplication.DropSubscription(System.Data.SqlServerCe.DropOption)" /> メソッドを使用してサブスクリプションを削除するときに、データベースを削除するかどうかを指定します。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DropOption.LeaveDatabase">
      <summary>
        <see cref="M:System.Data.SqlServerCe.SqlCeReplication.DropSubscription(System.Data.SqlServerCe.DropOption)" /> メソッドを使用してサブスクリプションを削除するときに、レプリケーション システム テーブル、およびユーザー テーブル内のすべてのレプリケーション システム列が削除されます。ただし、SQL Server Compact データベースは削除されません。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DropOption.DropDatabase">
      <summary>
        <see cref="M:System.Data.SqlServerCe.SqlCeReplication.DropSubscription(System.Data.SqlServerCe.DropOption)" /> メソッドを使用してサブスクリプションを削除するときに、SQL Server Compact データベースが削除されます。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DropOption.UnregisterSubscription">
      <summary>SQL Server Compact データベースをサブスクリプションから登録解除します。 </summary>
    </member>
    <member name="T:System.Data.SqlServerCe.ExchangeType">
      <summary>データをパブリッシャー側だけにマージするか、またはパブリッシャー側とサブスクライバーの両方向でマージするかを指定します。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ExchangeType.None">
      <summary>
        <see cref="ExchangeType" /> のオプションが指定されません。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ExchangeType.Upload">
      <summary>サブスクライバーの変更だけをパブリッシャー側でマージします。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ExchangeType.BiDirectional">
      <summary>パブリッシャーとサブスクライバー間ですべての変更をマージします。これは、既定の設定です。</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.NetworkType">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> オブジェクトの <see cref="P:System.Data.SqlServerCe.SqlCeReplication.DistributorNetwork" /> プロパティまたは <see cref="P:System.Data.SqlServerCe.SqlCeReplication.PublisherNetwork" /> プロパティを設定するときに使用するネットワーク プロトコルを指定します。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.NetworkType.DefaultNetwork">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> オブジェクトの <see cref="P:System.Data.SqlServerCe.SqlCeReplication.DistributorNetwork" /> プロパティまたは <see cref="P:System.Data.SqlServerCe.SqlCeReplication.PublisherNetwork" /> プロパティを設定するときに、現在設定されている Net-Library を使用します。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.NetworkType.TcpIpSockets">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> オブジェクトの <see cref="P:System.Data.SqlServerCe.SqlCeReplication.DistributorNetwork" /> プロパティまたは <see cref="P:System.Data.SqlServerCe.SqlCeReplication.PublisherNetwork" /> プロパティを設定するときに、TCP/IP ソケット Net-Library を使用します。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.NetworkType.MultiProtocol">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> オブジェクトの <see cref="P:System.Data.SqlServerCe.SqlCeReplication.DistributorNetwork" /> プロパティまたは <see cref="P:System.Data.SqlServerCe.SqlCeReplication.PublisherNetwork" /> プロパティを設定するときに、マルチプロトコル Net-Library を使用します。</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.OnStartTableDownload">
      <summary>サーバーからテーブル変更のダウンロードが開始されるときに起動されるイベントに対するユーザー定義のデリゲート。</summary>
      <param name="ar">
        <see cref="M:System.Data.SqlServerCe.SqlCeReplication.BeginSynchronize(System.AsyncCallback,System.Data.SqlServerCe.OnStartTableUpload,System.Data.SqlServerCe.OnStartTableDownload,System.Data.SqlServerCe.OnSynchronization,System.Object)" /> メソッドが返す <see cref="T:System.IAsyncResult" /> インターフェイス。</param>
      <param name="tableName">サーバーからダウンロード中のテーブルの名前。</param>
    </member>
    <member name="T:System.Data.SqlServerCe.OnStartTableUpload">
      <summary>サーバーへのテーブル変更のアップロードが開始されるときに起動されるイベントに対するユーザー定義のデリゲート。</summary>
      <param name="ar">BeginSynchronize メソッドが返す <see cref="T:System.IAsyncResult" /> インターフェイス。</param>
      <param name="tableName">サーバーにアップロード中のテーブルの名前。</param>
    </member>
    <member name="T:System.Data.SqlServerCe.OnSynchronization">
      <summary>競合回避モジュールの動作中に報告された実行中の同期イベントを処理するユーザー定義のデリゲート。</summary>
      <param name="ar">BeginSynchronize メソッドが返す <see cref="T:System.IAsyncResult" /> インターフェイス。</param>
      <param name="percentComplete">競合回避モジュールによって返された値。競合回避モジュールによるレプリケーション処理の完了割合 (%) を表します。</param>
    </member>
    <member name="T:System.Data.SqlServerCe.PurgeType">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeChangeTracking" /> クラスの <see cref="M:System.Data.SqlServerCe.SqlCeChangeTracking.PurgeTombstoneTableData(System.String,System.Data.SqlServerCe.PurgeType,System.Int64)" /> メソッドまたは <see cref="M:System.Data.SqlServerCe.SqlCeChangeTracking.PurgeTransactionSequenceData(System.Data.SqlServerCe.PurgeType,System.Int64)" /> メソッドを使用するときに、メタデータをパージするための条件を指定します。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.PurgeType.None">
      <summary>この値は、追跡インフラストラクチャで使用するために予約されています。コードでは使用しないでください。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.PurgeType.TimeBased">
      <summary>指定した日数よりもメタデータが古いかどうかに基づいてメタデータが削除されるように指定します。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.PurgeType.CsnBased">
      <summary>メタデータを変更する最後のトランザクションのコミット シーケンス番号 (CSN) に基づいてメタデータが削除されるように指定します。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.PurgeType.Max">
      <summary>この値は、追跡インフラストラクチャで使用するために予約されています。コードでは使用しないでください。</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.RdaBatchOption">
      <summary>
        <see cref="M:System.Data.SqlServerCe.SqlCeRemoteDataAccess.Push(System.String,System.String)" /> に関連付けられている行を 1 つのトランザクション内でバッチ処理するかどうかを指定します。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.RdaBatchOption.BatchingOff">
      <summary>SQL Server Compact で、SQL Server にプッシュされた行をバッチ処理しないことを示します。このサーバーは、1 行ずつ個別に処理を実行します。これは、既定の設定です。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.RdaBatchOption.BatchingOn">
      <summary>SQL Server Compact で、SQL Server にプッシュされた行を 1 つのトランザクションでバッチ処理することを示します。</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.RdaTrackOption">
      <summary>デバイスにプルされたテーブルを追跡するかどうかを指定します。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.RdaTrackOption.TrackingOff">
      <summary>SQL Server Compact で、プルされたテーブルへの変更を追跡しないことを示します。ローカルに PRIMARY KEY 制約は作成されません。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.RdaTrackOption.TrackingOn">
      <summary>SQL Server Compact で、プルされたテーブルへのすべての変更を追跡することを示します。<paramref name="sqlSelectString" /> で指定した値に関連する PRIMARY KEY 制約が、ローカル テーブルに作成されます。これは、既定の設定です。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.RdaTrackOption.TrackingOnWithIndexes">
      <summary>SQL Server Compact で、プルされたテーブルへのすべての変更を追跡することを示します。<paramref name="sqlSelectString" /> で指定した SQL Server テーブルに存在するインデックスと PRIMARY KEY 制約が、ローカル テーブルに作成されます。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.RdaTrackOption.TrackingOffWithIndexes">
      <summary>SQL Server Compact で、プルされたテーブルへの変更を追跡しないことを示します。<paramref name="sqlSelectString" /> で指定した SQL Server テーブルに存在するインデックスと PRIMARY KEY 制約が、ローカル テーブルに作成されます。</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.RepairOption">
      <summary>
        <see cref="M:System.Data.SqlServerCe.SqlCeEngine.Repair(System.String,System.Data.SqlServerCe.RepairOption)" /> メソッドに <see cref="T:System.Data.SqlServerCe.RepairOption" /> を渡すと、実行するデータベース修復の種類が指定されます。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.RepairOption.DeleteCorruptedRows">
      <summary>破損したすべての行を修復しようとせずに削除します。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.RepairOption.RecoverCorruptedRows">
      <summary>破損したすべての行を削除せずに修復しようとします。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.RepairOption.RecoverAllPossibleRows">
      <summary>修復可能な破損した行のすべてを修復します。修復できない行は、修正されずに残ります。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.RepairOption.RecoverAllOrFail">
      <summary>破損したすべての行の修復を試みます。すべての行を修復できなければ、いずれの行も修正されずに操作は失敗します。</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.ResultSetEnumerator">
      <summary>ResultSet オブジェクト内で一連のレコードを反復処理するために使用できる列挙子。<see cref="T:System.Data.SqlServerCe.ResultSetEnumerator" /> は、コードで直接使用するためのものではありません。<see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> オブジェクトを直接操作すると、より多くの機能を使用できます。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.ResultSetEnumerator.#ctor(System.Data.SqlServerCe.SqlCeResultSet)">
      <summary>
        <see cref="T:System.Data.SqlServerCe.ResultSetEnumerator" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="resultSet">列挙するレコードを格納した <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> オブジェクト。</param>
    </member>
    <member name="P:System.Data.SqlServerCe.ResultSetEnumerator.Current">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> 内の現在のレコード。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.ResultSetEnumerator.MoveNext">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> 内の次のレコードに移動します。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.ResultSetEnumerator.Reset">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> 内の最初のレコードの前にカーソルが配置されます。</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.ResultSetEnumerator.System#Collections#IEnumerator#Current"></member>
    <member name="T:System.Data.SqlServerCe.ResultSetOptions">
      <summary>
        <see cref="M:System.Data.SqlServerCe.ResultSetEnumerator.#ctor(System.Data.SqlServerCe.SqlCeResultSet)" /> のオプションを設定します。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ResultSetOptions.None">
      <summary>ResultSet のオプションが指定されません。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ResultSetOptions.Updatable">
      <summary>ResultSet は更新が可能です。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ResultSetOptions.Scrollable">
      <summary>ResultSet は順方向と逆方向のどちらにもスクロールできます。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ResultSetOptions.Sensitive">
      <summary>データ ソースに加えられた変更が ResultSet で検出されます。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ResultSetOptions.Insensitive">
      <summary>データ ソースに加えられた変更が ResultSet で検出されません。</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.ResultSetSensitivity">
      <summary>
        <see cref="M:System.Data.SqlServerCe.ResultSetEnumerator.#ctor(System.Data.SqlServerCe.SqlCeResultSet)" /> の感度を設定します。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ResultSetSensitivity.Asensitive">
      <summary>ResultSet の感度が設定されません。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ResultSetSensitivity.Insensitive">
      <summary>データ ソースに加えられた変更が ResultSet で検出されません。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ResultSetSensitivity.Sensitive">
      <summary>データ ソースに加えられた変更が ResultSet で検出されます。</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.ResultSetView">
      <summary>データ バインディング インターフェイスを実装し、ユーザー インターフェイス コントロールと <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> を関連付けます。</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.Columns">
      <summary>特定のコントロールにバインドされる <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> で、名前によって列を取得または設定します。</summary>
    </member>
    <member name="E:System.Data.SqlServerCe.ResultSetView.ListChanged">
      <summary>
        <see cref="T:System.Data.SqlServerCe.ResultSetView" /> に対して項目の追加または削除が実行された場合に、このイベントが発生します。</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.Ordinals">
      <summary>特定のコントロールにバインドされる <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> で、序数位置によって列を取得または設定します。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#Collections#ICollection#CopyTo(System.Array,System.Int32)"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#Collections#ICollection#Count"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#Collections#ICollection#IsSynchronized"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#Collections#ICollection#SyncRoot"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#Collections#IEnumerable#GetEnumerator"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#Collections#IList#Add(System.Object)"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#Collections#IList#Clear"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#Collections#IList#Contains(System.Object)"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#Collections#IList#IndexOf(System.Object)"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#Collections#IList#Insert(System.Int32,System.Object)"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#Collections#IList#IsFixedSize"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#Collections#IList#IsReadOnly"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#Collections#IList#Item(System.Int32)"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#Collections#IList#Remove(System.Object)"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#Collections#IList#RemoveAt(System.Int32)"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#AddNew"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#AllowEdit"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#AllowNew"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#AllowRemove"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#IsSorted"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#RemoveSort"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#SortDirection"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#SortProperty"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#SupportsChangeNotification"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#SupportsSearching"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#SupportsSorting"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#IDisposable#Dispose"></member>
    <member name="T:System.Data.SqlServerCe.RowView"></member>
    <member name="M:System.Data.SqlServerCe.RowView.Dispose"></member>
    <member name="M:System.Data.SqlServerCe.RowView.Equals(System.Object)"></member>
    <member name="M:System.Data.SqlServerCe.RowView.GetHashCode"></member>
    <member name="P:System.Data.SqlServerCe.RowView.System#ComponentModel#IDataErrorInfo#Error"></member>
    <member name="P:System.Data.SqlServerCe.RowView.System#ComponentModel#IDataErrorInfo#Item(System.String)"></member>
    <member name="M:System.Data.SqlServerCe.RowView.System#ComponentModel#IEditableObject#BeginEdit"></member>
    <member name="M:System.Data.SqlServerCe.RowView.System#ComponentModel#IEditableObject#CancelEdit"></member>
    <member name="M:System.Data.SqlServerCe.RowView.System#ComponentModel#IEditableObject#EndEdit"></member>
    <member name="P:System.Data.SqlServerCe.RowView.UpdatableRecord"></member>
    <member name="T:System.Data.SqlServerCe.SecurityType">
      <summary>レプリケーション中にパブリッシャーまたはディストリビューターに接続するときに使用するセキュリティのモードを指定します。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.SecurityType.DBAuthentication">
      <summary>レプリケーション中にパブリッシャーまたはディストリビューターに接続するときに、SQL Server 認証を使用します。これは、既定の設定です。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.SecurityType.NTAuthentication">
      <summary>レプリケーション中にパブリッシャーまたはディストリビューターに接続するときに、統合 Windows 認証を使用します。</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.SnapshotTransferType">
      <summary>IIS を実行中のコンピューターに、ディストリビューターからスナップショット ファイルを転送する方法を制御します。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.SnapshotTransferType.UNC">
      <summary>スナップショット ファイルは、サーバー上の UNC (Universal Naming Convention) 共有から転送されます。これは、既定の設定です。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.SnapshotTransferType.FTP">
      <summary>スナップショット ファイルは、FTP プロトコル経由で転送されます。</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeChangeTracking">
      <summary>[セキュリティ クリティカル]SQL Server Compact データベース内のテーブルへの変更を追跡するために使用できるメソッドを提供します。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.#ctor(System.Data.SqlServerCe.SqlCeConnection)">
      <summary>[セキュリティ クリティカル]<see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> を使用して <see cref="T:System.Data.SqlServerCe.SqlCeChangeTracking" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="connection">データ ソースへの接続を表す <see cref="T:System.Data.SqlServerCe.SqlCeConnection" />。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.#ctor(System.Data.SqlServerCe.SqlCeTransaction)">
      <summary>[セキュリティ クリティカル]<see cref="T:System.Data.SqlServerCe.SqlCeTransaction" /> を使用して <see cref="T:System.Data.SqlServerCe.SqlCeChangeTracking" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="transaction">変更の追跡が実行されるトランザクションを表す <see cref="T:System.Data.SqlServerCe.SqlCeTransaction" />。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.DisableTracking(System.String)">
      <summary>[セキュリティ クリティカル]指定したテーブルに対する追跡を無効にします。</summary>
      <param name="tableName">変更の追跡を無効にするテーブルの名前です。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.Dispose">
      <summary>[セキュリティ クリティカル]<see cref="T:System.Data.SqlServerCe.SqlCeChangeTracking" /> クラスの現在のインスタンスで使用されるすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.Dispose(System.Boolean)">
      <summary>[セキュリティ クリティカル]<see cref="T:System.Data.SqlServerCe.SqlCeChangeTracking" /> クラスで使用されたアンマネージ リソースを解放し、必要に応じてマネージ リソースも解放します。</summary>
      <param name="disposing">マネージ リソースとアンマネージ リソースの両方を解放する場合は true、アンマネージ リソースのみを解放する場合は false です。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.EnableTracking(System.String,System.Data.SqlServerCe.TrackingKeyType,System.Data.SqlServerCe.TrackingOptions)">
      <summary>[セキュリティ クリティカル]指定したテーブルに対する追跡を有効にします。</summary>
      <param name="tableName">追跡を有効にするテーブルの名前です。</param>
      <param name="trackingKeyType">追跡データに使用される行キーを指定する <see cref="T:System.Data.SqlServerCe.TrackingKeyType" /> の値のいずれかです。行キーは、追跡システムに対してテーブル行を一意に識別し、テーブルの主キーになることも、ROWGUIDCOL 属性が適用された型 uniqueidentifier の列になることもできます。</param>
      <param name="trackingOptions">テーブルで追跡の対象となるデータベース操作を指定する、ビットごとの組み合わせの <see cref="T:System.Data.SqlServerCe.TrackingOptions" /> の値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.GetLastCommittedCsn">
      <summary>[セキュリティ クリティカル]<see cref="T:System.Data.SqlServerCe.SqlCeChangeTracking" /> オブジェクトに関連付けられているデータ ソースにコミットされた最後のトランザクションのコミット シーケンス番号 (CSN) を返します。</summary>
      <returns>データ ソースの CSN です。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.GetTrackingOptions(System.String,System.Data.SqlServerCe.TrackingOptions@)">
      <summary>[セキュリティ クリティカル]指定したテーブルで現在追跡されているデータベース操作を示す値を取得します。</summary>
      <returns>テーブルが現在追跡されている (追跡が有効になっている) 場合は true。それ以外の場合は false。</returns>
      <param name="tableName">現在追跡されている操作を取得するテーブルの名前。</param>
      <param name="trackingOptions">このメソッドによって返される場合、<see cref="T:System.Data.SqlServerCe.TrackingOptions" /> の値のビットごとの組み合わせが含まれます。これは、現在追跡されている操作を示します。このパラメーターは初期化せずに渡されます。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.PackTombstoneKey(System.String,System.Object[])">
      <summary>[セキュリティ クリティカル]指定したテーブルの行キーを、廃棄テーブルの行キーに使用する形式に変換します。</summary>
      <returns>廃棄テーブルの行キーの値を表すバイトの配列です。</returns>
      <param name="tableName">行を含むテーブルの名前です。</param>
      <param name="columnValues">行キーの列の値を含む配列です。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.PurgeTombstoneTableData(System.String,System.Data.SqlServerCe.PurgeType,System.Int64)">
      <summary>[セキュリティ クリティカル]指定されたテーブルの廃棄データを削除します。</summary>
      <param name="tableName">廃棄データを削除するテーブルの名前です。</param>
      <param name="pType">パージが時間に基づくか、廃棄データを変更するための最後のトランザクションのコミット シーケンス番号 (CSN) に基づくかを指定する <see cref="T:System.Data.SqlServerCe.PurgeType" /> の値のいずれかです。</param>
      <param name="retentionValue">保持する廃棄行の最大数を指定する数値。時間に基づくパージの場合、パラメーターは廃棄データを保持する現在の日付からの日数を指定します。CSN に基づくパージの場合、パラメーターは廃棄データを保持する最後のトランザクションの CSN を指定します。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.PurgeTransactionSequenceData(System.Data.SqlServerCe.PurgeType,System.Int64)">
      <summary>[セキュリティ クリティカル]指定したデータをトランザクション履歴テーブルから削除します。</summary>
      <param name="pType">パージが時間に基づくか、トランザクション履歴データを変更するための最後のトランザクションのコミット シーケンス番号 (CSN) に基づくかを指定する <see cref="T:System.Data.SqlServerCe.PurgeType" /> の値のいずれかです。</param>
      <param name="retentionValue">保持する行の最大数を指定する数値。時間に基づくパージの場合、パラメーターはトランザクション履歴データを保持する現在の日付からの日数を指定します。CSN に基づくパージの場合、パラメーターはトランザクション履歴データを保持する最後のトランザクションの CSN を指定します。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.UnpackTombstoneKey(System.String,System.Byte[])">
      <summary>[セキュリティ クリティカル]廃棄テーブルで使用される行キーの表現を、指定したテーブルで使用される行キーの列の値に変換します。</summary>
      <returns>テーブルで使用される行キーの列の値を含んでいるオブジェクトの配列です。</returns>
      <param name="tableName">テーブルの名前です。</param>
      <param name="tombstoneKey">廃棄テーブルの行キーの値を表すバイトの配列です。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.UpgradePublicTracking(System.String)">
      <summary>[セキュリティ クリティカル]追跡が有効になっている SQL Server Compact SP2 データベースで、Sync Framework の Microsoft Sync Framework Service Pack 1 (SP1) 以降のバージョンで使用するために追跡メタデータをアップグレードします。</summary>
      <returns>データベースが正常にアップグレードされたか、データベースが現在追跡されていない場合は true。それ以外の場合は false。</returns>
      <param name="connectionString">データ ソースへの接続文字列。</param>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeCommand">
      <summary>データ ソースに対して実行する SQL ステートメントを表します。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.#ctor">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.#ctor(System.String)">
      <summary>クエリ テキストを指定して、<see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="commandText">クエリ テキスト。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.#ctor(System.String,System.Data.SqlServerCe.SqlCeConnection)">
      <summary>クエリ テキストと <see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> を指定して、<see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="commandText">クエリ テキスト。</param>
      <param name="connection">データ ソースへの接続を表す <see cref="T:System.Data.SqlServerCe.SqlCeConnection" />。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.#ctor(System.String,System.Data.SqlServerCe.SqlCeConnection,System.Data.SqlServerCe.SqlCeTransaction)">
      <summary>クエリ テキスト、<see cref="T:System.Data.SqlServerCe.SqlCeConnection" />、および <see cref="T:System.Data.SqlServerCe.SqlCeTransaction" /> を指定して、<see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="commandText">クエリ テキスト。</param>
      <param name="connection">データ ソースへの接続を表す <see cref="T:System.Data.SqlServerCe.SqlCeConnection" />。</param>
      <param name="transaction">
        <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> を実行するトランザクション。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.Cancel">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> の実行のキャンセルを試行します。</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommand.CommandText">
      <summary>データ ソースで実行する SQL ステートメントを取得または設定します。</summary>
      <returns>実行する SQL ステートメント、または開くベース テーブルの名前。既定値は空の文字列です。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommand.CommandTimeout">
      <summary>コマンドを実行する試みを終了してエラーが生成されるまでの待機時間を取得または設定します。</summary>
      <returns>SQL Server Compact の場合は、常に 0 です。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommand.CommandType">
      <summary>
        <see cref="P:System.Data.SqlServerCe.SqlCeCommand.CommandText" /> プロパティの解釈方法を示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Data.CommandType" /> 値の 1 つ。既定値は <see cref="F:System.Data.CommandType.Text" /> です。</returns>
      <exception cref="T:System.ArgumentException">値が有効な <see cref="T:System.Data.CommandType" /> ではありません。</exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommand.Connection">
      <summary>この <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> のインスタンスで使用する <see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> を取得または設定します。</summary>
      <returns>データ ソースへの接続。既定値は null です。</returns>
      <exception cref="T:System.InvalidOperationException">トランザクションの進行中に <see cref="P:System.Data.SqlServerCe.SqlCeCommand.Connection" /> プロパティが変更されました。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.CreateParameter">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> オブジェクトの新しいインスタンスを作成します。</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommand.DesignTimeVisible">
      <summary>取得操作では、必ず false が返されます。設定操作では、必ず <see cref="T:System.NotSupportedException" /> がスローされます。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.ExecuteNonQuery">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> に対して SQL ステートメントを実行し、影響を受けた行数を返します。</summary>
      <returns>影響を受けた行数。</returns>
      <exception cref="T:System.InvalidOperationException">接続が存在しません。または接続が開いていません。または接続を登録した当初のトランザクション コンテキストとは異なるコンテキストでは、コマンドを実行できません。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.ExecuteReader">
      <summary>
        <see cref="P:System.Data.SqlServerCe.SqlCeCommand.CommandText" /> を <see cref="P:System.Data.SqlServerCe.SqlCeCommand.Connection" /> に送信し、<see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> を構築します。</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> オブジェクト。</returns>
      <exception cref="T:System.InvalidOperationException">接続を登録した当初のトランザクション コンテキストとは異なるコンテキストでは、コマンドを実行できません。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>
        <see cref="P:System.Data.SqlServerCe.SqlCeCommand.CommandText" /> を <see cref="P:System.Data.SqlServerCe.SqlCeCommand.Connection" /> に送信し、<see cref="T:System.Data.CommandBehavior" /> 値のいずれかを使用して <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> を構築します。</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> オブジェクト。</returns>
      <param name="behavior">
        <see cref="T:System.Data.CommandBehavior" /> 値の 1 つ。</param>
      <exception cref="T:System.InvalidOperationException">接続を登録した当初のトランザクション コンテキストとは異なるコンテキストでは、コマンドを実行できません。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.ExecuteResultSet(System.Data.SqlServerCe.ResultSetOptions)">
      <summary>
        <see cref="P:System.Data.SqlServerCe.SqlCeCommand.CommandText" /> を <see cref="P:System.Data.SqlServerCe.SqlCeCommand.Connection" /> に送信し、<see cref="T:System.Data.SqlServerCe.ResultSetOptions" /> を使用して <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> を構築します。</summary>
      <param name="options">ResultSet の構築時に使用する ResultSetOptions。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.ExecuteResultSet(System.Data.SqlServerCe.ResultSetOptions,System.Data.SqlServerCe.SqlCeResultSet)">
      <summary>
        <see cref="P:System.Data.SqlServerCe.SqlCeCommand.CommandText" /> を <see cref="P:System.Data.SqlServerCe.SqlCeCommand.Connection" /> に送信し、<see cref="T:System.Data.SqlServerCe.ResultSetOptions" /> を使用して <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> を構築します。</summary>
      <param name="options">ResultSet の構築時に使用する ResultSetOptions。</param>
      <param name="resultSet">構築する ResultSet。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.ExecuteScalar">
      <summary>クエリを実行し、そのクエリが返す結果セットの最初の行にある最初の列を返します。残りの列または行は無視されます。</summary>
      <returns>結果セット内の最初の行の最初の列。</returns>
      <exception cref="T:System.InvalidOperationException">接続を登録した当初のトランザクション コンテキストとは異なるコンテキストでは、コマンドを実行できません。</exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommand.IndexName">
      <summary>開くインデックスを指定します。</summary>
      <returns>開くインデックスの名前。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommand.Parameters">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeParameterCollection" /> を取得します。</summary>
      <returns>SQL ステートメントのパラメーター。既定値は空のコレクションです。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.Prepare">
      <summary>準備された (コンパイル済みの) バージョンのコマンドをデータ ソースに作成します。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Data.SqlServerCe.SqlCeCommand.Connection" /> が設定されていません。または<see cref="P:System.Data.SqlServerCe.SqlCeCommand.Connection" /> が <see cref="M:System.Data.SqlServerCe.SqlCeConnection.Open" /> ではありません。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.SetRange(System.Data.SqlServerCe.DbRangeOptions,System.Object[],System.Object[])">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が読み込む行セットを制限します。</summary>
      <param name="dbRangeOptions">範囲を指定するときに使用するオプション。</param>
      <param name="startData">範囲の開始を示すキー値。</param>
      <param name="endData">範囲の終了を示すキー値。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Data.SqlServerCe.SqlCeCommand.IndexName" /> プロパティが設定されていません。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.System#ICloneable#Clone"></member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommand.Transaction">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> を実行するトランザクションを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.SqlCeTransaction" />。既定値は null です。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommand.UpdatedRowSource">
      <summary>
        <see cref="T:System.Data.Common.DbDataAdapter" /> の <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> メソッドで使用するときに、コマンドの結果を <see cref="T:System.Data.DataRow" /> に適用する方法を取得または設定します。このプロパティは、.NET Compact Framework Data Provider for SQL Server Compact では使用しないでください。</summary>
      <returns>
        <see cref="T:System.Data.UpdateRowSource" /> 値の 1 つ。既定値は Both です。コマンドが自動生成される場合、既定値は None です。</returns>
      <exception cref="T:System.ArgumentException">入力された値が、<see cref="T:System.Data.UpdateRowSource" /> 値ではありませんでした。</exception>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeCommandBuilder">
      <summary>
        <see cref="T:System.Data.DataSet" /> への変更を関連データベースに反映させるための単一テーブル コマンドを自動的に生成する手段を提供します。このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommandBuilder.#ctor">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeCommandBuilder" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommandBuilder.#ctor(System.Data.SqlServerCe.SqlCeDataAdapter)">
      <summary>関連付けられた <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" /> オブジェクトと <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> オブジェクトを使用して、<see cref="T:System.Data.SqlServerCe.SqlCeCommandBuilder" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="adapter">
        <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" /> の名前。</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommandBuilder.CatalogLocation">
      <summary>SQL Server Compact ではサポートされていません。</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommandBuilder.CatalogSeparator">
      <summary>SQL Server Compact ではサポートされていません。</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommandBuilder.ConflictOption">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeCommandBuilder" /> で使用する <see cref="T:System.Data.ConflictOption" /> を指定します。</summary>
      <returns>
        <see cref="T:System.Data.ConflictOption" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommandBuilder.DataAdapter">
      <summary>SQL ステートメントを自動生成する対象の <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" /> オブジェクトを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommandBuilder.GetDeleteCommand">
      <summary>アプリケーションが <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" /> に対して <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> を呼び出したときにデータベースで削除処理を実行するための、自動生成された <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> オブジェクトを取得します。</summary>
      <returns>削除を実行するための自動生成された <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommandBuilder.GetInsertCommand">
      <summary>アプリケーションが <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" /> に対して <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> を呼び出したときにデータベースで挿入処理を実行するための、自動生成された <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> オブジェクトを取得します。</summary>
      <returns>挿入を実行するための自動生成された <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommandBuilder.GetUpdateCommand">
      <summary>アプリケーションが <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" /> に対して <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> を呼び出したときにデータベースで更新処理を実行するための、自動生成された <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> オブジェクトを取得します。</summary>
      <returns>更新を実行するための自動生成された <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommandBuilder.QuoteIdentifier(System.String)">
      <summary>指定した識別子の引用符で囲まれた正しい形式を返します。</summary>
      <returns>引用符で囲まれた識別子の形式。</returns>
      <param name="unquotedIdentifier">引用符で囲まれた形式を返す識別子。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="unquotedIdentifier" /> が null です。</exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommandBuilder.QuotePrefix">
      <summary>名前に空白や予約済みトークンなどの文字を含む SQL Server データベース オブジェクト (テーブル、列など) を指定するための開始文字を取得または設定します。</summary>
      <returns>使用する開始文字。既定値は空の文字列です。</returns>
      <exception cref="T:System.InvalidOperationException">このプロパティは、INSERT、UPDATE、または DELETE の各コマンドの生成後には変更できません。</exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommandBuilder.QuoteSuffix">
      <summary>名前に空白や予約済みトークンなどの文字を含む SQL Server データベース オブジェクト (テーブル、列など) を指定するための終了文字を取得または設定します。</summary>
      <returns>使用する終了文字。既定値は空の文字列です。</returns>
      <exception cref="T:System.InvalidOperationException">このプロパティは、INSERT、UPDATE、または DELETE の各コマンドの生成後には変更できません。</exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommandBuilder.SchemaSeparator">
      <summary>SQL Server Compact ではサポートされていません。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommandBuilder.UnquoteIdentifier(System.String)">
      <summary>指定した識別子の引用符で囲まれていない正しい形式を返します。</summary>
      <returns>すべての引用符内の識別子が削除されました。</returns>
      <param name="quotedIdentifier">引用符で囲まれていない形式を返す識別子。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="quotedIdentifier" /> が null です。</exception>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeConnection">
      <summary>SQL Server Compact データ ソースへの開いた接続を表します。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.#ctor">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.#ctor(System.String)">
      <summary>接続文字列を指定して、<see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="connectionString">データベースを開くために使用する接続。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.BeginTransaction">
      <summary>データベース トランザクションを開始します。</summary>
      <returns>新しいトランザクションを表すオブジェクト。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>現在の <see cref="T:System.Data.IsolationLevel" /> 値を使用して、データベース トランザクションを開始します。</summary>
      <returns>新しいトランザクションを表すオブジェクト。</returns>
      <param name="isolationLevel">この接続のトランザクション分離レベル。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.ChangeDatabase(System.String)">
      <summary>開いている <see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> の現在のデータベースを変更します。</summary>
      <param name="value">データベース名。</param>
      <exception cref="T:System.ArgumentException">データベース名が無効です。</exception>
      <exception cref="T:System.InvalidOperationException">接続が開いていません。</exception>
      <exception cref="T:System.Data.SqlServerCe.SqlCeException">データベースを変更できません。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.Close">
      <summary>データ ソースへの接続を閉じます。このメソッドは、開いている接続を閉じるための最も好ましいメソッドです。</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnection.ConnectionString">
      <summary>データベースを開くために使用する文字列を取得または設定します。</summary>
      <returns>データ ソース名を含む .NET Compact Framework Data Provider for SQL Server Compact の接続文字列、および初期接続を確立するために必要なその他のパラメーター。既定値は空の文字列です。</returns>
      <exception cref="T:System.ArgumentException">無効な接続文字列が引数として指定されています。</exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnection.ConnectionTimeout">
      <summary>接続の確立の試行を開始してから、その試行を終了してエラーを生成するまでの待機時間を取得します。</summary>
      <returns>接続が開かれるまでの待機時間 (秒)。SQL Server Compact では、値は常に 0 です。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.CreateCommand">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> に関連付けられている <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> オブジェクトを作成し、返します。</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnection.Database">
      <summary>現在のデータベース名、または接続が開いてから使用するデータベース名を取得します。</summary>
      <returns>現在のデータベース名、または接続が開いてから使用するデータベース名。既定値は空の文字列です。SQL Server Compact の場合、このプロパティの値には、\myApp\myDB.sdf のように、データベース ファイルの完全パスを指定する必要があります。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnection.DatabaseIdentifier">
      <summary>同期の実行中に現在のデータベースの一意の識別子を取得します。</summary>
      <returns>現在のデータベースの一意の識別子。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnection.DataSource">
      <summary>データ ソースのファイル名を取得します。</summary>
      <returns>データ ソースの場所とファイル名。既定値は空の文字列です。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.Dispose">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> クラスの現在のインスタンスで使用されるすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.EnlistTransaction(System.Transactions.Transaction)">
      <summary>指定された <see cref="T:System.Transactions.Transaction" /> に参加します。</summary>
      <param name="SysTrans">参加するトランザクション</param>
      <exception cref="T:System.InvalidOperationException">接続は既にローカル トランザクションに参加しています。または接続はトランザクションに参加できませんでした。</exception>
      <exception cref="T:System.NullReferenceException">
        <paramref name="SysTrans" /> が null です。</exception>
    </member>
    <member name="E:System.Data.SqlServerCe.SqlCeConnection.FlushFailure">
      <summary>バックグラウンドでのフラッシュが失敗した場合に発生します。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.GetDatabaseInfo">
      <summary>接続されているデータベースのロケール情報、暗号化モード、および大文字と小文字の区別に関するキーと値のペアを返します。</summary>
      <returns>ロケール、暗号化モード、および大文字と小文字の区別に関する名前と値のペアの並べ替えられたリスト。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.GetSchema">
      <summary>この <see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> のデータ ソースのスキーマ情報を返します。</summary>
      <returns>スキーマ情報を格納する <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.GetSchema(System.String)">
      <summary>スキーマ名に指定された文字列を使用して、この <see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> のデータ ソースのスキーマ情報を返します。</summary>
      <returns>スキーマ情報を格納する <see cref="T:System.Data.DataTable" />。</returns>
      <param name="collectionName">スキーマ名。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.GetSchema(System.String,System.String[])">
      <summary>スキーマ名に指定された文字列と制限値に指定された文字列配列を使用して、この <see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> のデータ ソースのスキーマ情報を返します。</summary>
      <returns>スキーマ情報を格納する <see cref="T:System.Data.DataTable" />。</returns>
      <param name="collectionName">スキーマ名。</param>
      <param name="restrictionValues">一連の制限値。</param>
    </member>
    <member name="E:System.Data.SqlServerCe.SqlCeConnection.InfoMessage">
      <summary>.NET Compact Framework Data Provider for SQL Server が警告メッセージまたは情報メッセージを送信したときに発生します。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.Open">
      <summary>
        <see cref="P:System.Data.SqlServerCe.SqlCeConnection.ConnectionString" /> で指定したプロパティ設定を使用して、データベース接続を開きます。</summary>
      <exception cref="T:System.InvalidOperationException">接続が既に開いています。</exception>
      <exception cref="T:System.Data.SqlServerCe.SqlCeException">接続を開くときに、接続レベルのエラーが発生しました。</exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnection.ServerVersion">
      <summary>データベースのバージョン番号を文字列として返します。</summary>
      <returns>SQL Server Compact のバージョンの文字列。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnection.State">
      <summary>接続の現在の状態を取得します。</summary>
      <returns>
        <see cref="T:System.Data.ConnectionState" /> 値のビットごとの組み合わせ。既定値は Closed です。</returns>
    </member>
    <member name="E:System.Data.SqlServerCe.SqlCeConnection.StateChange">
      <summary>接続の状態が変更したときに発生します。</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> クラスで使用される接続文字列の内容を簡単に作成および管理できるようにします。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.#ctor">
      <summary>既定値を使用して、<see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.#ctor(System.String)">
      <summary>インスタンスの内部接続情報にデータを提供する指定された接続文字列を使用して、<see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="connectionString">接続文字列。</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.AutoshrinkThreshold">
      <summary>自動圧縮が開始されるまでのデータベース ファイルに許容されている空き容量の割合 (%) を取得または設定します。</summary>
      <returns>値を 100 に設定すると、自動圧縮が無効になります。指定しない場合、既定値は 60 です。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.CaseSensitive">
      <summary>データベース照合順序で大文字と小文字を区別するかどうかを示す値を取得または設定します。</summary>
      <returns>データベースで大文字と小文字を区別する場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.Clear">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" /> インスタンスの内容をクリアします。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.ContainsKey(System.String)">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" /> に特定のキーが格納されているかどうかを判断します。</summary>
      <returns>指定されたキーの要素が <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" /> に格納されている場合は true。それ以外の場合は false。</returns>
      <param name="keyword">
        <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" /> 内で検索するキー。</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.DataSource">
      <summary>SQL Server Compact データベースのファイル パスとファイル名を取得または設定します。</summary>
      <returns>SQL Server Compact データベースのファイル パスとファイル名。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.DefaultLockEscalation">
      <summary>トランザクションが行からページ、またはページからテーブルへとエスカレーションを試みるまでに取得するロックの数を取得または設定します。</summary>
      <returns>トランザクションが行からページ、またはページからテーブルへとエスカレーションを試みるまでに取得するロックの数。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.DefaultLockTimeout">
      <summary>トランザクションがロックを待機する既定の時間 (ミリ秒) を取得または設定します。</summary>
      <returns>トランザクションがロックを待機する時間 (ミリ秒)。指定しない場合、既定値は 2000 です。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.Encrypt">
      <summary>データベースを暗号化するかどうかを示す値を取得または設定します。</summary>
      <returns>データベースを暗号化する場合は true。それ以外の場合は false。暗号化を有効にする場合は true を設定し、暗号化を無効にする場合は false を設定します。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.EncryptionMode">
      <summary>データベースの作成に使用される暗号化モードを取得または設定します。</summary>
      <returns>データベースの作成に使用される暗号化モード。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.Enlist">
      <summary>接続データベースを Enlist を使用して開くかどうかを示す値を取得または設定します。</summary>
      <returns>接続データベースを Enlist を使用して開く場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.FileMode">
      <summary>データベース ファイルを開くときに使用するモードを取得または設定します。</summary>
      <returns>データベース ファイルを開くときに使用するモードの値。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.FlushInterval">
      <summary>コミットされたすべてのトランザクションがディスクにフラッシュされるまでの指定された間隔 (秒単位) を取得または設定します。</summary>
      <returns>指定された間隔 (秒単位)。指定しない場合、既定値は 10 です。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.InitialLcid">
      <summary>データベースで使用するロケール ID (LCID) を取得または設定します。</summary>
      <returns>ロケール ID (LCID) の値。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.IsFixedSize">
      <summary>SqlCeConnectionStringBuilder に固定サイズが設定されているかどうかを示す値を取得します。</summary>
      <returns>SqlCeConnectionStringBuilder に固定サイズが設定されている場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.Item(System.String)">
      <summary>指定されたキーに関連付けられた値を取得または設定します。</summary>
      <returns>指定されたキーに関連付けられた値。</returns>
      <param name="keyword">取得または設定する項目のキー。</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.Keys">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" /> にキーを格納する ICollection を取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" /> にキーを格納する ICollection。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.MaxBufferSize">
      <summary>変更内容がディスクにフラッシュされるまでに SQL Server Mobile が使用できるメモリの最大容量 (KB 単位) を取得または設定します。</summary>
      <returns>メモリの最大容量 (KB 単位)。指定されていない場合、既定値は 640 です。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.MaxDatabaseSize">
      <summary>データベースの最大サイズ (MB 単位) を取得または設定します。</summary>
      <returns>データベースの最大サイズ (MB 単位)。既定値は 128 です。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.Password">
      <summary>データベース パスワード (最大 40 文字) を取得または設定します。</summary>
      <returns>データベース パスワードの値。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.PersistSecurityInfo">
      <summary>パスワードなどの機密性の高い情報を接続文字列の一部として返すかどうかを示す値を取得または設定します。</summary>
      <returns>機密性の高い情報を接続文字列の一部として返す場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.Remove(System.String)">
      <summary>指定されたキーのエントリを <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" /> インスタンスから削除します。</summary>
      <returns>キーが接続文字列内に存在していて削除された場合は true。キーが存在しなかった場合は false。</returns>
      <param name="keyword">この <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" /> 内の接続文字列から削除するキーと値のペアのうちのキー。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.ShouldSerialize(System.String)">
      <summary>指定されたキーがこの <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" /> インスタンスに存在するかどうかを示します。</summary>
      <returns>指定されたキーのエントリが <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" /> に格納されている場合は true。それ以外の場合は false。</returns>
      <param name="keyword">
        <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" /> 内で検索するキー。</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.TempFileMaxSize">
      <summary>一時データベース ファイルの最大サイズ (MB 単位) を取得または設定します。</summary>
      <returns>一時データベース ファイルの最大サイズ (MB 単位)。既定値は 128 です。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.TempFilePath">
      <summary>一時データベースの場所を取得または設定します。</summary>
      <returns>一時データベースの場所。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary>指定されたキーに対応する値をこの <see cref="T:System.Data.SqlServerCe.SqlCeconnectionStringBuilder" /> から取得します。</summary>
      <returns>キーワードが接続文字列内で見つかった場合は true。それ以外の場合は false。</returns>
      <param name="keyword">取得する項目のキー。</param>
      <param name="value">キーワードに対応する値。</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.Values">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" /> に値を格納する ICollection を取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" /> に値を格納する ICollection。</returns>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeDataAdapter">
      <summary>
        <see cref="T:System.Data.DataSet" /> へのデータの格納およびデータ ソースの更新に使用される、一連のデータ コマンドおよびデータベース接続を表します。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataAdapter.#ctor">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataAdapter.#ctor(System.Data.SqlServerCe.SqlCeCommand)">
      <summary>
        <see cref="P:System.Data.SqlServerCe.SqlCeDataAdapter.SelectCommand" /> プロパティとして <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> を指定して、<see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="selectCommand">SELECT ステートメントである <see cref="T:System.Data.SqlServerCe.SqlCeCommand" />。この <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> は、<see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" /> の <see cref="P:System.Data.SqlServerCe.SqlCeDataAdapter.SelectCommand" /> プロパティとして設定されます。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataAdapter.#ctor(System.String,System.Data.SqlServerCe.SqlCeConnection)">
      <summary>
        <see cref="P:System.Data.SqlServerCe.SqlCeDataAdapter.SelectCommand" /> オブジェクトと <see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> オブジェクトを指定して、<see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="selectCommandText">SQL SELECT ステートメントである <see cref="T:System.String" />。この文字列は、<see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" /> の <see cref="P:System.Data.SqlServerCe.SqlCeDataAdapter.SelectCommand" /> プロパティの <see cref="P:System.Data.SqlServerCe.SqlCeCommand.CommandText" /> として使用されます。</param>
      <param name="selectConnection">接続を表す <see cref="T:System.Data.SqlServerCe.SqlCeConnection" />。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataAdapter.#ctor(System.String,System.String)">
      <summary>
        <see cref="P:System.Data.SqlServerCe.SqlCeDataAdapter.SelectCommand" /> と接続文字列を指定して、<see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="selectCommandText">SQL SELECT ステートメントである <see cref="T:System.String" />。この文字列は、<see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" /> の <see cref="P:System.Data.SqlServerCe.SqlCeDataAdapter.SelectCommand" /> プロパティの <see cref="P:System.Data.SqlServerCe.SqlCeCommand.CommandText" /> として使用されます。</param>
      <param name="selectConnectionString">接続文字列。</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataAdapter.DeleteCommand">
      <summary>データ セットからレコードを削除する SQL ステートメントを取得または設定します。</summary>
      <returns>
        <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 処理中に、<see cref="T:System.Data.DataSet" /> 内の削除行に対応するデータ ソース内のレコードを削除するための <see cref="T:System.Data.SqlServerCe.SqlCeCommand" />。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataAdapter.Dispose">
      <summary>現在のインスタンスを破棄します。</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataAdapter.InsertCommand">
      <summary>データ ソースに新しいレコードを挿入する SQL ステートメントを取得または設定します。</summary>
      <returns>
        <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 処理中に、<see cref="T:System.Data.DataSet" /> 内の新しい行に対応するデータ ソース内のレコードを挿入するための <see cref="T:System.Data.SqlServerCe.SqlCeCommand" />。</returns>
    </member>
    <member name="E:System.Data.SqlServerCe.SqlCeDataAdapter.RowUpdated">
      <summary>
        <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> の呼び出し中に、データ ソースに対して更新コマンドが実行された後に発生します。更新が試行されると、このイベントが発生します。</summary>
    </member>
    <member name="E:System.Data.SqlServerCe.SqlCeDataAdapter.RowUpdating">
      <summary>
        <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> の呼び出し中に、データ ソースに対して更新コマンドが実行される前に発生します。更新が試行されると、このイベントが発生します。</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataAdapter.SelectCommand">
      <summary>データ ソース内のレコードを選択する SQL ステートメントを取得または設定します。</summary>
      <returns>
        <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)" /> 処理中に、<see cref="T:System.Data.DataSet" /> に格納するレコードをデータ ソースから選択するための <see cref="T:System.Data.SqlServerCe.SqlCeCommand" />。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataAdapter.System#ICloneable#Clone">
      <summary>このメンバーの説明については、<see cref="M:System.ICloneable.Clone" /> のトピックを参照してください。</summary>
      <returns>
        <see cref="T:System.Object" /> を返します。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataAdapter.UpdateCommand">
      <summary>データ ソース内のレコードを更新する SQL ステートメントを取得または設定します。</summary>
      <returns>
        <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 処理中に、<see cref="T:System.Data.DataSet" /> 内の変更行に対応するデータ ソース内のレコードを更新するための <see cref="T:System.Data.SqlServerCe.SqlCeCommand" />。</returns>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeDataReader">
      <summary>データ ソースからデータ行の前方向ストリームを読み取る方法を提供します。このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.Close">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> オブジェクトを閉じます。</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataReader.Depth">
      <summary>現在の行の入れ子の深さを示す値を取得します。</summary>
      <returns>現在の行の入れ子の深さ。.NET Compact Framework Data Provider for SQL Server Compact は入れ子をサポートしないため、常に 0 が返されます。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.Dispose">
      <summary>この <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> によって消費されているリソースを解放します。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.Dispose(System.Boolean)">
      <summary>この <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> で使用されているアンマネージ リソースを解放し、必要に応じてマネージ リソースも解放します。</summary>
      <param name="disposing">マネージ リソースを開放するかどうかを指定します。</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataReader.FieldCount">
      <summary>クエリの SELECT 句内の列数を取得します。</summary>
      <returns>有効なレコードセットに位置していない場合は 0。それ以外の場合は現在のレコードの列数。</returns>
      <exception cref="T:System.InvalidOperationException">データ ソースへの現在の接続がありません。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.Finalize">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> がガベージ コレクションによってクリアされる前に、アンマネージ リソースを解放し、その他のクリーンアップ操作を実行します。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetBoolean(System.Int32)">
      <summary>指定した列の値をブール値として取得します。</summary>
      <returns>列の値。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.InvalidCastException">指定したキャストが有効ではありません。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">値が null です。</exception>
      <exception cref="T:System.InvalidOperationException">操作が有効ではありません。<see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が、結果セットの最後の行よりも後に置かれている可能性があります。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetByte(System.Int32)">
      <summary>指定した列の値をバイトとして取得します。</summary>
      <returns>指定した列のバイト型の値。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.InvalidCastException">指定したキャストが有効ではありません。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">値が null です。</exception>
      <exception cref="T:System.InvalidOperationException">操作が有効ではありません。<see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が、結果セットの最後の行よりも後に置かれている可能性があります。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>指定した列オフセットからのバイト ストリームを、配列としてバッファーに読み込みます。読み込みは、指定したバッファー オフセットから開始されます。</summary>
      <returns>実際に読み取ったバイト数。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="dataIndex">読み取り操作の開始位置を示す、フィールド内のインデックス。</param>
      <param name="buffer">バイト ストリームの読み取り先のバッファー。</param>
      <param name="bufferIndex">読み取り操作を開始するための、<paramref name="buffer" /> のインデックス。</param>
      <param name="length">バッファーにコピーする最大データ長。</param>
      <exception cref="T:System.InvalidOperationException">操作が有効ではありません。<see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が、結果セットの最後の行よりも後に置かれている可能性があります。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetChar(System.Int32)">
      <summary>.NET Compact Framework Data Provider for SQL Server Compact ではサポートされていません。</summary>
      <returns>
        <see cref="T:System.Char" /> を返します。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>指定した列オフセットからの文字ストリームを、配列としてバッファーに読み込みます。読み込みは、指定したバッファー オフセットから開始されます。</summary>
      <returns>実際に読み取った文字数。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <param name="dataIndex">読み取り操作の開始位置を示す、行内のインデックス。</param>
      <param name="buffer">データのコピー先のバッファー。</param>
      <param name="bufferIndex">読み取り操作を開始するための、<paramref name="buffer" /> のインデックス。</param>
      <param name="length">読み取る文字数。</param>
      <exception cref="T:System.InvalidOperationException">操作が有効ではありません。<see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が、結果セットの最後の行よりも後に置かれている可能性があります。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetDataTypeName(System.Int32)">
      <summary>ソース データ型名を取得します。</summary>
      <returns>バックエンド データ型名。</returns>
      <param name="index">列の 0 から始まる序数。</param>
      <exception cref="T:System.InvalidOperationException">操作が有効ではありません。<see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が、結果セットの最後の行よりも後に置かれている可能性があります。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetDateTime(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.DateTime" /> オブジェクトとして取得します。</summary>
      <returns>指定した列の値。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.InvalidCastException">指定したキャストが有効ではありません。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">値が null です。</exception>
      <exception cref="T:System.InvalidOperationException">操作が有効ではありません。<see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が、結果セットの最後の行よりも後に置かれている可能性があります。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetDecimal(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.Decimal" /> オブジェクトとして取得します。</summary>
      <returns>指定した列の値。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.InvalidCastException">指定したキャストが有効ではありません。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">値が null です。</exception>
      <exception cref="T:System.InvalidOperationException">操作が有効ではありません。<see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が、結果セットの最後の行よりも後に置かれている可能性があります。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetDouble(System.Int32)">
      <summary>指定した列の値を倍精度浮動小数点数として取得します。</summary>
      <returns>指定した列の値。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.InvalidCastException">指定したキャストが有効ではありません。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">値が null です。</exception>
      <exception cref="T:System.InvalidOperationException">操作が有効ではありません。<see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が、結果セットの最後の行よりも後に置かれている可能性があります。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetEnumerator">
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> を返します。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetFieldType(System.Int32)">
      <summary>オブジェクトのデータ型である <see cref="T:System.Type" /> を取得します。</summary>
      <returns>オブジェクトのデータ型である <see cref="T:System.Type" />。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.InvalidOperationException">操作が有効ではありません。<see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が、結果セットの最後の行よりも後に置かれている可能性があります。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetFloat(System.Int32)">
      <summary>指定した列の値を単精度浮動小数点数として取得します。</summary>
      <returns>指定した列の値。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.InvalidCastException">指定したキャストが有効ではありません。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">値が null です。</exception>
      <exception cref="T:System.InvalidOperationException">操作が有効ではありません。<see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が、結果セットの最後の行よりも後に置かれている可能性があります。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetGuid(System.Int32)">
      <summary>指定した列の値をグローバル一意識別子 (GUID) として取得します。</summary>
      <returns>指定した列の値。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.InvalidCastException">指定したキャストが有効ではありません。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">値が null です。</exception>
      <exception cref="T:System.InvalidOperationException">操作が有効ではありません。<see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が、結果セットの最後の行よりも後に置かれている可能性があります。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetInt16(System.Int32)">
      <summary>指定した列の値を 16 ビット符号付き整数として取得します。</summary>
      <returns>指定した列の値。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.InvalidCastException">指定したキャストが有効ではありません。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">値が null です。</exception>
      <exception cref="T:System.InvalidOperationException">操作が有効ではありません。<see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が、結果セットの最後の行よりも後に置かれている可能性があります。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetInt32(System.Int32)">
      <summary>指定した列の値を 32 ビット符号付き整数として取得します。</summary>
      <returns>指定した列の値。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.InvalidCastException">指定したキャストが有効ではありません。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">値が null です。</exception>
      <exception cref="T:System.InvalidOperationException">操作が有効ではありません。<see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が、結果セットの最後の行よりも後に置かれている可能性があります。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetInt64(System.Int32)">
      <summary>指定した列の値を 64 ビット符号付き整数として取得します。</summary>
      <returns>指定した列の値。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.InvalidCastException">指定したキャストが有効ではありません。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">値が null です。</exception>
      <exception cref="T:System.InvalidOperationException">操作が有効ではありません。<see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が、結果セットの最後の行よりも後に置かれている可能性があります。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetName(System.Int32)">
      <summary>指定した列の名前を取得します。</summary>
      <returns>指定した列の名前。</returns>
      <param name="index">列の 0 から始まる序数。</param>
      <exception cref="T:System.InvalidOperationException">操作が有効ではありません。<see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が、結果セットの最後の行よりも後に置かれている可能性があります。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetOrdinal(System.String)">
      <summary>列名を指定して、列の序数を取得します。</summary>
      <returns>列の 0 から始まる序数。</returns>
      <param name="name">列の名前。</param>
      <exception cref="T:System.IndexOutOfRangeException">指定された名前は有効な列名ではありません。</exception>
      <exception cref="T:System.InvalidOperationException">操作が有効ではありません。<see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が、結果セットの最後の行よりも後に置かれている可能性があります。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetProviderSpecificFieldType(System.Int32)">
      <summary>基になるプロバイダー固有フィールド型の内部表現である <see cref="T:System.Object" /> を取得します。</summary>
      <returns>指定した列のデータ型を示す <see cref="T:System.Type" /> オブジェクト。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSchemaTable">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> の列メタデータを記述する <see cref="T:System.Data.DataTable" /> を返します。</summary>
      <returns>列メタデータを説明する <see cref="T:System.Data.DataTable" />。</returns>
      <exception cref="T:System.InvalidOperationException">操作が有効ではありません。<see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が、結果セットの最後の行よりも後に置かれている可能性があります。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlBinary(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.Data.SqlTypes.SqlBinary" /> として取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBinary" />。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.InvalidOperationException">操作が有効ではありません。<see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が、結果セットの最後の行よりも後に置かれている可能性があります。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlBoolean(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.Data.SqlTypes.SqlBoolean" /> として取得します。</summary>
      <returns>列の値。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.InvalidOperationException">操作が有効ではありません。<see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が、結果セットの最後の行よりも後に置かれている可能性があります。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlByte(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.Data.SqlTypes.SqlByte" /> として取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" />。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.InvalidOperationException">操作が有効ではありません。<see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が、結果セットの最後の行よりも後に置かれている可能性があります。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlDateTime(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.Data.SqlTypes.SqlDateTime" /> として取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" />。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.InvalidOperationException">操作が有効ではありません。<see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が、結果セットの最後の行よりも後に置かれている可能性があります。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlDecimal(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.Data.SqlTypes.SqlDecimal" /> として取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" />。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.InvalidOperationException">操作が有効ではありません。<see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が、結果セットの最後の行よりも後に置かれている可能性があります。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlDouble(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.Data.SqlTypes.SqlDouble" /> として取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" />。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.InvalidOperationException">操作が有効ではありません。<see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が、結果セットの最後の行よりも後に置かれている可能性があります。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlGuid(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.Data.SqlTypes.SqlGuid" /> として取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlGuid" />。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.InvalidOperationException">操作が有効ではありません。<see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が、結果セットの最後の行よりも後に置かれている可能性があります。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlInt16(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.Data.SqlTypes.SqlInt16" /> として取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" />。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.InvalidOperationException">操作が有効ではありません。<see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が、結果セットの最後の行よりも後に置かれている可能性があります。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlInt32(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.Data.SqlTypes.SqlInt32" /> として取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" />。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.InvalidOperationException">操作が有効ではありません。<see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が、結果セットの最後の行よりも後に置かれている可能性があります。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlInt64(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.Data.SqlTypes.SqlInt64" /> として取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" />。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.InvalidOperationException">操作が有効ではありません。<see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が、結果セットの最後の行よりも後に置かれている可能性があります。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlMoney(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.Data.SqlTypes.SqlMoney" /> として取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" />。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.InvalidOperationException">操作が有効ではありません。<see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が、結果セットの最後の行よりも後に置かれている可能性があります。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlSingle(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.Data.SqlTypes.SqlSingle" /> として取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" />。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.InvalidOperationException">操作が有効ではありません。<see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が、結果セットの最後の行よりも後に置かれている可能性があります。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlString(System.Int32)">
      <summary>指定した列の値を <see cref="T:System.Data.SqlTypes.SqlString" /> として取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" />。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.InvalidOperationException">操作が有効ではありません。<see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が、結果セットの最後の行よりも後に置かれている可能性があります。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetString(System.Int32)">
      <summary>指定した列の値を文字列として取得します。</summary>
      <returns>指定した列の値。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.InvalidCastException">指定したキャストが有効ではありません。</exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">値が null です。</exception>
      <exception cref="T:System.InvalidOperationException">操作が有効ではありません。<see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が、結果セットの最後の行よりも後に置かれている可能性があります。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetValue(System.Int32)">
      <summary>指定した序数の列の値をネイティブ形式で取得します。</summary>
      <returns>取得した値。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
      <exception cref="T:System.InvalidOperationException">操作が有効ではありません。<see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が、結果セットの最後の行よりも後に置かれている可能性があります。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetValues(System.Object[])">
      <summary>現在の行のすべての属性列を取得します。</summary>
      <returns>配列の <see cref="T:System.Object" /> のインスタンス数。</returns>
      <param name="values">属性列のコピー先の <see cref="T:System.Object" /> 配列。</param>
      <exception cref="T:System.InvalidOperationException">操作が有効ではありません。<see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が、結果セットの最後の行よりも後に置かれている可能性があります。</exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataReader.HasRows">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> に 1 行以上の行が格納されているかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Boolean" /> 値。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataReader.HiddenFieldCount">
      <returns>
        <see cref="T:System.Int32" /> を返します。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataReader.IsClosed">
      <summary>データ リーダーが閉じているかどうかを示します。</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> が閉じている場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.IsCommandBehavior(System.Data.CommandBehavior)">
      <summary>指定した <see cref="T:System.Data.CommandBehavior" /> がこの <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> のものと一致するかどうかを判断します。</summary>
      <returns>動作が一致する場合は true。それ以外の場合は false。</returns>
      <param name="condition">コマンドの動作。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.IsDBNull(System.Int32)">
      <summary>列に格納されている値が存在しない値または欠損値かどうかを示す値を取得します。</summary>
      <returns>指定した列の値が <see cref="T:System.DBNull" /> と等価である場合は true。それ以外の場合は false。</returns>
      <param name="ordinal">列の 0 から始まる序数。</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataReader.Item(System.Int32)">
      <summary>列の序数によって指定した列の値をネイティブ形式で取得します。</summary>
      <returns>指定した列のネイティブ形式での値。</returns>
      <param name="index">列の序数。</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataReader.Item(System.String)">
      <summary>列名によって指定した列の値をネイティブ形式で取得します。</summary>
      <returns>指定した列のネイティブ形式での値。</returns>
      <param name="name">列名。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.NextResult">
      <summary>.NET Compact Framework Data Provider for SQL Server Compact ではサポートされていません。</summary>
      <returns>
        <see cref="T:System.Boolean" /> を返します。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.OnMove"></member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.Read">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> を次のレコードに進めます。</summary>
      <returns>他の行が存在する場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataReader.RecordsAffected">
      <summary>SQL ステートメントの実行によって変更、挿入、または削除された行の数を取得します。</summary>
      <returns>変更、挿入、または削除された行数。影響を受けた行がなかった場合またはステートメントが失敗した場合は 0。SELECT ステートメントの場合は -1。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.Seek(System.Data.SqlServerCe.DbSeekOptions,System.Object[])">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> を、指定したパラメーターに一致するインデックス値が存在するレコードに配置します。</summary>
      <returns>ブール値。true の場合はカーソルが行に配置されています。</returns>
      <param name="dbSeekOptions">使用する <see cref="T:System.Data.SqlServerCe.DbSeekOptions" />。</param>
      <param name="index">レコードのインデックス。</param>
      <exception cref="T:System.Data.SqlServerCe.SqlCeException">値が見つからないか、他のエラーが発生しました。</exception>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeEngine">
      <summary>SQL Server Compact エンジン オブジェクトのプロパティ、メソッド、および他のオブジェクトを表します。このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeEngine.#ctor">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeEngine" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeEngine.#ctor(System.String)">
      <summary>ローカル接続文字列を指定して、<see cref="T:System.Data.SqlServerCe.SqlCeEngine" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeEngine.Compact(System.String)">
      <summary>既存のデータベース ファイルから新しいデータベース ファイルを作成し、SQL Server Compact データベース内の使用済み領域をクリアします。このメソッドは、データベースの照合順序、暗号化、またはパスワードの設定変更にも使用されます。</summary>
      <param name="connectionString">接続先データベースへの接続文字列。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeEngine.CreateDatabase">
      <summary>新しいデータベースを作成します。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeEngine.Dispose">
      <summary>すべての SQL Server Compact <see cref="T:System.Data.SqlServerCe.SqlCeEngine" /> リソースを解放します。</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeEngine.LocalConnectionString">
      <summary>SQL Server Compact データベースの接続文字列を取得または設定します。</summary>
      <returns>接続文字列。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeEngine.Repair(System.String,System.Data.SqlServerCe.RepairOption)">
      <summary>破損したデータベースを修復します。</summary>
      <param name="connectionString">データベースへのローカル接続文字列。</param>
      <param name="options">データベースの修復時に使用する RepairOption。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeEngine.Shrink">
      <summary>空のページをファイルの末尾に移動して、ファイルを切り詰めることにより、SQL Server Compact データベース内の使用済み領域がクリアされます。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeEngine.Upgrade">
      <summary>SQL Server Compact データベースを Version 3.1 から 3.5 にアップグレードします。アップグレード後、ソース データベースが暗号化されていた場合は、データベースが暗号化されます。そうでなかった場合、アップグレードされたデータベースは暗号化されません。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeEngine.Upgrade(System.String)">
      <summary>SQL Server Compact データベースを Version 3.1 から 3.5 にアップグレードします。接続先データベースは、接続文字列で暗号化モードが指定されていた場合、暗号化されます。データベースの照合順序は、接続文字列で大文字と小文字の区別のプロパティが true に設定されている場合、大文字と小文字が区別されます。</summary>
      <param name="destConnectionString">接続先データベースへの接続文字列。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeEngine.Verify">
      <summary>データベース内の各ページのチェックサムを再計算し、その新しいチェックサムと予測される値を比較します。</summary>
      <returns>チェックサムが一致し、データベースが破損していない場合、true。それ以外の場合は、false。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeEngine.Verify(System.Data.SqlServerCe.VerifyOption)">
      <summary>VerifyOption に基づいて、データベースの整合性を検証します。</summary>
      <returns>データベースが破損していない場合は true。それ以外の場合は、false。</returns>
      <param name="option">使用するデータベース検証のレベルを決めます。使用できるオプションの値の詳細については、「<see cref="T:System.Data.SqlServerCe.VerifyOption" />」を参照してください。</param>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeError">
      <summary>データ ソースが返す警告またはエラーに関する情報を収集します。このクラスは継承できません。</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeError.ErrorParameters">
      <summary>最後の 3 つのエラー パラメーターを取得します。SQL Server Compact は、エラー パラメーターを使用して、エラーに関する詳細情報を提供します。</summary>
      <returns>最後の 3 つのエラー パラメーターを格納する文字列配列。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeError.HResult">
      <summary>エラーの種類を示す HRESULT 値を返します。</summary>
      <returns>エラーの種類を示す HR 番号。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeError.Message">
      <summary>エラーを説明するテキストを取得します。</summary>
      <returns>エラーを説明するテキスト。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeError.NativeError">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeError" /> のネイティブ エラー番号を取得します。これらのエラーの詳細については、SQL Server Compact オンライン ブックの「トラブルシューティング」セクションの「SQL Server Compact のエラー」を参照してください。</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.SqlCeError" /> のネイティブ エラー番号。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeError.NumericErrorParameters">
      <summary>最初の 3 つのエラー パラメーターを取得します。SQL Server Compact は、エラー パラメーターを使用して、エラーに関する詳細情報を提供します。</summary>
      <returns>最初の 3 つのエラー パラメーターを格納する整数配列。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeError.Source">
      <summary>エラーを生成したプロバイダーの名前を取得します。</summary>
      <returns>エラーを生成したプロバイダーの名前。たとえば、<see cref="P:System.Data.SqlServerCe.SqlCeError.Source" /> プロパティから "OLE DB Provider for SQL Server Compact" のような文字列が返されることがあります。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeError.ToString">
      <summary>エラー メッセージの完全なテキストを取得します。</summary>
      <returns>エラー メッセージの完全なテキスト。</returns>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeErrorCollection">
      <summary>.NET Compact Framework Data Provider for SQL Server Compact が生成するすべてのエラーを収集します。このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeErrorCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeErrorCollection" /> の要素を <see cref="T:System.Array" /> にコピーします。コピーは、<see cref="T:System.Array" /> 内の指定したインデックス位置から開始されます。</summary>
      <param name="array">要素のコピー先の <see cref="T:System.Array" />。</param>
      <param name="index">
        <paramref name="array" /> の開始インデックス。</param>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Data.SqlServerCe.SqlCeErrorCollection" /> 内の <paramref name="index" /> の合計と要素の数が <see cref="T:System.Array" /> の <see cref="P:System.Array.Length" /> を超えています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が null です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が <paramref name="array" /> に対して無効です。</exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeErrorCollection.Count">
      <summary>コレクション内の <see cref="T:System.Data.SqlServerCe.SqlCeError" /> オブジェクト数を取得します。</summary>
      <returns>コレクション内の <see cref="T:System.Data.SqlServerCe.SqlCeError" /> オブジェクトの合計数。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeErrorCollection.GetEnumerator">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeErrorCollection" /> を反復処理できる列挙子を返します。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />
      </returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeErrorCollection.Item(System.Int32)">
      <summary>指定したインデックス位置にあるエラーを取得します。</summary>
      <returns>指定したインデックス位置にあるエラーを格納する <see cref="T:System.Data.SqlServerCe.SqlCeError" />。</returns>
      <param name="index">取得する <see cref="T:System.Data.SqlServerCe.SqlCeError" /> の、0 から始まるインデックス番号。</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeErrorCollection.System#Collections#ICollection#IsSynchronized"></member>
    <member name="P:System.Data.SqlServerCe.SqlCeErrorCollection.System#Collections#ICollection#SyncRoot"></member>
    <member name="T:System.Data.SqlServerCe.SqlCeException">
      <summary>基になるプロバイダーが SQL Server Compact データ ソースから警告またはエラーを返したときにスローされる例外。このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>シリアル化で役立つコンストラクター。</summary>
      <param name="info">シリアル化情報。</param>
      <param name="context">ストリーミング コンテキスト。</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeException.Errors">
      <summary>.NET Compact Framework Data Provider for SQL Server Compact が生成する例外の詳細情報を含む、1 つ以上の <see cref="T:System.Data.SqlServerCe.SqlCeError" /> オブジェクトのコレクションを取得します。</summary>
      <returns>例外の <see cref="T:System.Data.SqlServerCe.SqlCeError" /> クラスの収集されたインスタンスを格納する <see cref="T:System.Data.SqlServerCe.SqlCeErrorCollection" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>[セキュリティ クリティカル]オブジェクトのシリアル化に必要なデータを <see cref="T:System.Runtime.Serialization.SerializationInfo" /> に格納します。</summary>
      <param name="info">シリアル化情報。</param>
      <param name="context">ストリーミング コンテキスト。</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeException.HResult">
      <summary>例外の HRESULT 値を取得します。値は、例外の <see cref="T:System.Data.SqlServerCe.SqlCeErrorCollection" /> 内にある <see cref="T:System.Data.SqlServerCe.SqlCeError" /> の最初のインスタンスの <see cref="P:System.Data.SqlServerCe.SqlCeError.HResult" /> 値と同じです。</summary>
      <returns>HRESULT 値。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeException.Message">
      <summary>この例外の <see cref="T:System.Data.SqlServerCe.SqlCeErrorCollection" /> 内にある <see cref="T:System.Data.SqlServerCe.SqlCeError" /> の最初のインスタンスの説明テキストを取得します。</summary>
      <returns>エラーを説明するテキスト。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeException.NativeError">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeErrorCollection" /> 内の最初の <see cref="T:System.Data.SqlServerCe.SqlCeError" /> のネイティブ エラー番号を取得します。エラーの詳細については、SQL Server Compact オンライン ブックの「トラブルシューティング」セクションの「SQL Server Compact のエラー」のトピックを参照してください。</summary>
      <returns>
        <see cref="T:System.Int32" /> を返します。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeException.Source">
      <summary>エラーを生成した OLE DB プロバイダーの名前を取得します。</summary>
      <returns>エラーを生成した OLE DB プロバイダーの名前。</returns>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeFlushFailureEventArgs">
      <summary>
        <see cref="E:System.Data.SqlServerCe.SqlCeConnection.FlushFailure" /> イベントのイベント引数をカプセル化します。</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeFlushFailureEventArgs.Errors">
      <summary>フラッシュが失敗する原因となる <see cref="T:System.Data.SqlServerCe.SqlCeError" /> オブジェクトのコレクション。</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeFlushFailureEventArgs.Message">
      <summary>フラッシュが失敗する原因となる <see cref="T:System.Data.SqlServerCe.SqlCeError" /> を説明するテキストを取得します。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeFlushFailureEventArgs.ToString"></member>
    <member name="T:System.Data.SqlServerCe.SqlCeFlushFailureEventHandler">
      <summary>
        <see cref="E:System.Data.SqlServerCe.SqlCeConnection.FlushFailure" /> イベントを待機するために実装する必要があるデリゲート。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベント データを格納している <see cref="T:System.Data.SqlServerCe.SqlCeFlushFailureEventArgs" />。</param>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeInfoMessageEventArgs">
      <summary>
        <see cref="E:System.Data.SqlServerCe.SqlCeConnection.InfoMessage" /> イベントのデータを提供します。このクラスは継承できません。</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeInfoMessageEventArgs.Errors">
      <summary>データ ソースから送信された警告のコレクションを取得します。</summary>
      <returns>データ ソースから送信された警告のコレクション。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeInfoMessageEventArgs.Message">
      <summary>データ ソースから送信されたエラーの完全なテキストを取得します。</summary>
      <returns>エラーの完全なテキスト。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeInfoMessageEventArgs.ToString">
      <summary>
        <see cref="E:System.Data.SqlServerCe.SqlCeConnection.InfoMessage" /> イベントの文字列形式を取得します。</summary>
      <returns>
        <see cref="E:System.Data.SqlServerCe.SqlCeConnection.InfoMessage" /> イベントを表す文字列。</returns>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeInfoMessageEventHandler">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> の <see cref="E:System.Data.SqlServerCe.SqlCeConnection.InfoMessage" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベント データを格納している <see cref="T:System.Data.SqlServerCe.SqlCeInfoMessageEventArgs" />。</param>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeInvalidDatabaseFormatException">
      <summary> SQL Server Compact が古いバージョンまたは新しいバージョンのデータベース ファイルを開こうとした場合に基になるプロバイダーが Microsoft SQL Server Compact データ ソースからエラーを返したときにスローされる例外。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeInvalidDatabaseFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>シリアル化で役立つコンストラクター。</summary>
      <param name="info">シリアル化情報。</param>
      <param name="context">ストリーミング コンテキスト。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeInvalidDatabaseFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>[セキュリティ クリティカル]オブジェクトのシリアル化に必要なデータを <see cref="T:System.Runtime.Serialization.SerializationInfo" /> に格納します。</summary>
      <param name="info">シリアル化情報。</param>
      <param name="context">ストリーミング コンテキスト。</param>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeLockTimeoutException">
      <summary>この例外は、ロックのタイムアウトが発生したときに、スローされます。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeLockTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>シリアル化で役立つコンストラクター。</summary>
      <param name="info">シリアル化情報。</param>
      <param name="context">ストリーミング コンテキスト。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeLockTimeoutException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>[セキュリティ クリティカル] オブジェクトのシリアル化に必要なデータを SerializationInfo に格納します。</summary>
      <param name="info">シリアル化情報。</param>
      <param name="context">ストリーミング コンテキスト。</param>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeParameter">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> のパラメーターと、オプションで <see cref="T:System.Data.DataSet" /> 列に対するマップを表します。このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameter.#ctor">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameter.#ctor(System.String,System.Data.SqlDbType)">
      <summary>パラメーター名とデータ型を指定して、<see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">割り当てるパラメーターの名前。</param>
      <param name="dataType">
        <see cref="T:System.Data.SqlDbType" /> 値の 1 つ。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32)">
      <summary>パラメーター名、データ型、および長さを使用して、<see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">割り当てるパラメーターの名前。</param>
      <param name="dataType">
        <see cref="T:System.Data.SqlDbType" /> 値の 1 つ。</param>
      <param name="size">パラメーターの長さ。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
      <summary>パラメーター名、データ型、長さなどのプロパティを使用して、<see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> クラスの新しいインスタンスを初期化します。SQL Server Compact では、入力パラメーターだけがサポートされます。</summary>
      <param name="parameterName">パラメーターの名前。</param>
      <param name="dbType">
        <see cref="T:System.Data.SqlDbType" /> 値の 1 つ。</param>
      <param name="size">パラメーターの長さ。</param>
      <param name="isNullable">フィールドの値を null にできる場合は true。それ以外の場合は false。</param>
      <param name="precision">
        <see cref="P:System.Data.SqlServerCe.SqlCeParameter.Value" /> を解決するための、小数点の左右の合計桁数。</param>
      <param name="scale">
        <see cref="P:System.Data.SqlServerCe.SqlCeParameter.Value" /> を解決するための、小数部の桁数。</param>
      <param name="sourceColumn">ソース列の名前。</param>
      <param name="sourceVersion">
        <see cref="T:System.Data.DataRowVersion" /> 値の 1 つ。</param>
      <param name="value">
        <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> の値を示す <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
      <summary>パラメーター名、データ型、長さ、パラメーターの方向などのプロパティを指定して、<see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> クラスの新しいインスタンスを初期化します。SQL Server Compact では、入力パラメーターだけがサポートされます。</summary>
      <param name="parameterName">パラメーターの名前。</param>
      <param name="dbType">
        <see cref="T:System.Data.SqlDbType" /> 値の 1 つ。</param>
      <param name="size">パラメーターの長さ。</param>
      <param name="direction">使用する <see cref="P:System.Data.ParameterDirection" />。</param>
      <param name="isNullable">フィールドの値を null にできる場合は true。それ以外の場合は false。</param>
      <param name="precision">
        <see cref="P:System.Data.SqlServerCe.SqlCeParameter.Value" /> を解決するための、小数点の左右の合計桁数。</param>
      <param name="scale">
        <see cref="P:System.Data.SqlServerCe.SqlCeParameter.Value" /> を解決するための、小数部の桁数。</param>
      <param name="sourceColumn">ソース列の名前。</param>
      <param name="sourceVersion">
        <see cref="T:System.Data.DataRowVersion" /> 値の 1 つ。</param>
      <param name="value">
        <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> の値を示す <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)">
      <summary>パラメーター名、データ型、長さ、およびソース列名を指定して、<see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">割り当てるパラメーターの名前。</param>
      <param name="dataType">
        <see cref="T:System.Data.SqlDbType" /> 値の 1 つ。</param>
      <param name="size">パラメーターの長さ。</param>
      <param name="sourceColumn">ソース列の名前。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameter.#ctor(System.String,System.Object)">
      <summary>パラメーター名と新しい <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> の値を指定して、<see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">割り当てるパラメーターの名前。</param>
      <param name="value">新しい <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> オブジェクトの値。</param>
      <exception cref="T:System.ArgumentException">パラメーターに指定された値は、SQL Server Compact でサポートされているデータベースの型に変換できません。</exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.DbType">
      <summary>パラメーターの <see cref="T:System.Data.DbType" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Data.DbType" /> 値の 1 つ。既定値は <see cref="F:System.Data.DbType.String" /> です。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">プロパティが有効な <see cref="T:System.Data.DbType" /> に設定されていません。</exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.Direction">
      <summary>.NET Compact Framework Data Provider for SQL Server Compact では、このプロパティは常に ParameterDirection.Input を返します。このプロパティに別の値を設定すると、<see cref="T:System.InvalidOperationException" /> がスローされます。</summary>
      <returns>SQL Server Compact Data Provider では、このプロパティは常に ParameterDirection.Input を返します。このプロパティの設定は、サポートされていません。</returns>
      <exception cref="T:System.InvalidOperationException">ユーザーがこのプロパティを設定しようとしました。</exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.IsNullable">
      <summary>パラメーターが null 値を受け付けるかどうかを示す値を取得または設定します。</summary>
      <returns>null 値を受け付ける場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.Offset"></member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.ParameterName">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> の名前を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> の名前。既定値は空の文字列です。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.Precision">
      <summary>
        <see cref="P:System.Data.SqlServerCe.SqlCeParameter.Value" /> プロパティを表すときに使用する最大桁数を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Data.SqlServerCe.SqlCeParameter.Value" /> プロパティを表すための最大桁数。既定値は 0 です。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameter.ResetDbType">
      <summary>この <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> に関連付けられている型をリセットします。</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.Scale">
      <summary>
        <see cref="P:System.Data.SqlServerCe.SqlCeParameter.Value" /> を解決するための小数部桁数を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Data.SqlServerCe.SqlCeParameter.Value" /> を解決するための小数部の桁数。既定値は 0 です。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.Size">
      <summary>列内のデータの最大長を取得または設定します。</summary>
      <returns>列内のデータの最大長。既定値は、パラメーター値から推論されます。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.SourceColumn">
      <summary>
        <see cref="T:System.Data.DataSet" /> に割り当てられ、<see cref="P:System.Data.SqlServerCe.SqlCeParameter.Value" /> の読み込みまたは戻しに使用されるソース列の名前を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Data.DataSet" /> に割り当てられたソース列の名前。既定値は空の文字列です。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.SourceColumnNullMapping"></member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.SourceVersion">
      <summary>
        <see cref="P:System.Data.SqlServerCe.SqlCeParameter.Value" /> の読み込み時に使用する <see cref="T:System.Data.DataRowVersion" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Data.DataRowVersion" /> 値の 1 つ。既定値は Current です。</returns>
      <exception cref="T:System.ArgumentException">プロパティが <see cref="T:System.Data.DataRowVersion" /> 値のいずれにも設定されていません。</exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.SqlDbType">
      <summary>パラメーターの <see cref="T:System.Data.SqlDbType" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Data.SqlDbType" /> 値の 1 つ。既定値は NVarChar です。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameter.System#ICloneable#Clone"></member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameter.ToString">
      <summary>
        <see cref="P:System.Data.SqlServerCe.SqlCeParameter.ParameterName" /> が含まれる文字列を取得します。</summary>
      <returns>
        <see cref="P:System.Data.SqlServerCe.SqlCeParameter.ParameterName" /> が含まれる文字列。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.Value">
      <summary>パラメーターの値を取得または設定します。</summary>
      <returns>パラメーターの値を示す <see cref="T:System.Object" />。既定値は null です。</returns>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeParameterCollection">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> に関連するすべてのパラメーター、および <see cref="T:System.Data.DataSet" /> 列に対する各パラメーターのマップを収集します。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.Add(System.Data.SqlServerCe.SqlCeParameter)">
      <summary>指定した <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> を <see cref="T:System.Data.SqlServerCe.SqlCeParameterCollection" /> に追加します。</summary>
      <returns>新しい <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> オブジェクトへの参照。</returns>
      <param name="value">コレクションに追加する <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.Add(System.Object)">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> オブジェクトを <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> に追加します。</summary>
      <returns>新しい <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> オブジェクトの、コレクション内でのインデックス。</returns>
      <param name="value">コレクションに追加する <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> オブジェクト。</param>
      <exception cref="T:System.InvalidCastException">渡されたパラメーターが <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> ではありませんでした。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.Add(System.String,System.Data.SqlDbType)">
      <summary>パラメーターの名前とデータ型を指定して、<see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> を <see cref="T:System.Data.SqlServerCe.SqlCeParameterCollection" /> に追加します。</summary>
      <returns>新しい <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> オブジェクトへの参照。</returns>
      <param name="parameterName">パラメーターの名前。</param>
      <param name="type">SqlDbType の値のいずれか 1 つです。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.Add(System.String,System.Data.SqlDbType,System.Int32)">
      <summary>パラメーター名、データ型、および列の幅を指定して、<see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> を <see cref="T:System.Data.SqlServerCe.SqlCeParameterCollection" /> に追加します。</summary>
      <returns>新しい <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> オブジェクトへの参照。</returns>
      <param name="parameterName">パラメーターの名前。</param>
      <param name="type">SqlDbType の値のいずれか 1 つです。</param>
      <param name="size">列の幅。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.Add(System.String,System.Data.SqlDbType,System.Int32,System.String)">
      <summary>パラメーターの名前、データ型、列の幅、およびソース列名を指定して、<see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> を <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> に追加します。</summary>
      <returns>新しい <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> オブジェクトへの参照。</returns>
      <param name="parameterName">パラメーターの名前。</param>
      <param name="type">SqlDbType の値のいずれか 1 つです。</param>
      <param name="size">列の幅。</param>
      <param name="sourceColumn">ソース列の名前。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.Add(System.String,System.Object)">
      <summary>パラメーターの名前と値を指定して、<see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> を <see cref="T:System.Data.SqlServerCe.SqlCeParameterCollection" /> に追加します。</summary>
      <returns>新しい <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> オブジェクトへの参照。</returns>
      <param name="parameterName">パラメーターの名前。</param>
      <param name="value">コレクションに追加する <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> の <see cref="T:System.Object" /> 値。</param>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> パラメーターとして提供されるオブジェクトを文字列に変換することはできません。これは、オブジェクトがプリミティブ型、SqlDbType、またはバイト配列のいずれでもない場合に発生する可能性があります。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.AddRange(System.Array)">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeParameterCollection" /> に <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> オブジェクトの配列を追加します。</summary>
      <param name="values">コレクションに追加する <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> 型の値の配列。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.AddWithValue(System.String,System.Object)">
      <summary>新しい <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> を <see cref="T:System.Data.SqlServerCe.SqlCeParameterCollection" /> に追加し、その値を設定します。</summary>
      <param name="parameterName">
        <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> の名前。</param>
      <param name="value">
        <paramref name="parameterName" /> の値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.Clear">
      <summary>コレクションからすべての項目を削除します。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.Contains(System.Object)">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> オブジェクトがコレクション内に存在するかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> がコレクション内に存在する場合は true、コレクション内に存在しない場合は false です。</returns>
      <param name="value">検索する <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> オブジェクトの値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.Contains(System.String)">
      <summary>指定したパラメーター名の <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> がコレクション内に存在するかどうかを示す値を取得します。</summary>
      <returns>パラメーターがコレクション内に存在する場合は true、コレクション内に存在しない場合は false です。</returns>
      <param name="value">パラメーターの名前。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeParameterCollection" /> から、指定した配列に <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> オブジェクトをコピーします。</summary>
      <param name="array">
        <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> オブジェクトのコピー先の <see cref="T:System.Array" />。</param>
      <param name="index">配列の開始インデックス。</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameterCollection.Count">
      <summary>コレクション内の <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> オブジェクト数を取得します。</summary>
      <returns>コレクション内の <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> オブジェクト数。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.GetEnumerator"></member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.IndexOf(System.Object)">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> オブジェクトの、コレクション内での位置を取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> の、コレクション内での 0 から始まる位置。</returns>
      <param name="value">検索する <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> オブジェクト。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.IndexOf(System.String)">
      <summary>指定したパラメーター名の <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> の、コレクション内での位置を取得します。</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> の、コレクション内での位置。</returns>
      <param name="parameterName">検索するパラメーターの名前。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.Insert(System.Int32,System.Object)">
      <summary>コレクション内の指定したインデックス位置に <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> を挿入します。</summary>
      <param name="index">コレクション内でパラメーターを挿入する位置の、0 から始まるインデックス番号。</param>
      <param name="value">コレクションに追加する <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />。</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameterCollection.IsFixedSize"></member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameterCollection.IsReadOnly"></member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameterCollection.IsSynchronized"></member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameterCollection.Item(System.Int32)">
      <summary>指定したインデックス位置にある <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> を取得または設定します。</summary>
      <returns>指定したインデックス位置にある <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />。</returns>
      <param name="index">取得するパラメーターの、0 から始まるインデックス番号。</param>
      <exception cref="T:System.IndexOutOfRangeException">指定されたインデックスは存在しません。</exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameterCollection.Item(System.String)">
      <summary>指定した名前の <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> を取得または設定します。</summary>
      <returns>指定した名前を持つ <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />。</returns>
      <param name="parameterName">取得するパラメーターの名前。</param>
      <exception cref="T:System.IndexOutOfRangeException">指定された名前は存在しません。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.Remove(System.Object)">
      <summary>指定した <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> をコレクションから削除します。</summary>
      <param name="value">コレクションから削除する <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> オブジェクト。</param>
      <exception cref="T:System.SystemException">パラメーターが存在しません。</exception>
      <exception cref="T:System.InvalidCastException">パラメーターが <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> ではありません。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.RemoveAt(System.Int32)">
      <summary>指定したインデックス位置にある <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> をコレクションから削除します。</summary>
      <param name="index">削除するパラメーターの、0 から始まるインデックス。</param>
      <exception cref="T:System.IndexOutOfRangeException">指定されたインデックスは存在しません。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.RemoveAt(System.String)">
      <summary>指定した名前の <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> をコレクションから削除します。</summary>
      <param name="parameterName">削除するパラメーターの名前。</param>
      <exception cref="T:System.ArgumentException">指定した名前のパラメーターはコレクション内に存在しません。</exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameterCollection.SyncRoot"></member>
    <member name="T:System.Data.SqlServerCe.SqlCeProviderFactory">
      <summary>プロバイダーのデータ ソース クラスの実装のインスタンスを作成するためのメソッドのセットを表します。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeProviderFactory.#ctor">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeProviderFactory" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeProviderFactory.CreateCommand">
      <summary>
        <see cref="T:System.Data.Common.DbCommand" /> を実装しているプロバイダーのクラスの新しいインスタンスを返します。</summary>
      <returns>
        <see cref="System.Data.Common.DbCommand" /> の新しいインスタンス。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeProviderFactory.CreateCommandBuilder">
      <summary>
        <see cref="System.Data.Common.DbCommandBuilder" /> を実装しているプロバイダーのクラスの新しいインスタンスを返します。</summary>
      <returns>
        <see cref="System.Data.Common.DbCommandBuilder" /> の新しいインスタンス。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeProviderFactory.CreateConnection">
      <summary>
        <see cref="System.Data.Common.DbConnection" /> を実装しているプロバイダーのクラスの新しいインスタンスを返します。</summary>
      <returns>
        <see cref="System.Data.Common.DbConnection" /> の新しいインスタンス。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeProviderFactory.CreateConnectionStringBuilder">
      <summary>クラスを実装しているプロバイダーのクラスの新しいインスタンスを返します。</summary>
      <returns>クラスの新しいインスタンス。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeProviderFactory.CreateDataAdapter">
      <summary>
        <see cref="System.Data.Common.DbDataAdapter" /> を実装しているプロバイダーのクラスの新しいインスタンスを返します。</summary>
      <returns>
        <see cref="System.Data.Common.DbDataAdapter." /> の新しいインスタンス。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeProviderFactory.CreateParameter">
      <summary>
        <see cref="System.Data.Common.DbParameter" /> を実装しているプロバイダーのクラスの新しいインスタンスを返します。</summary>
      <returns>
        <see cref="System.Data.Common.DbParameter" /> の新しいインスタンス。</returns>
    </member>
    <member name="F:System.Data.SqlServerCe.SqlCeProviderFactory.Instance">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeProviderFactory" /> のインスタンス。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeProviderFactory.System#IServiceProvider#GetService(System.Type)">
      <summary>サービスの種類を取得します。</summary>
      <returns>
        <see cref="T:System.Object" /> を返します。</returns>
      <param name="serviceType">サービスの種類。</param>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeRemoteDataAccess">
      <summary>[セキュリティ クリティカル]<see cref="T:System.Data.SqlServerCe.SqlCeRemoteDataAccess" /> オブジェクトの新しいインスタンスを初期化します。リモート データ アクセスの詳細については、「リモート データ アクセス (RDA) の使用」を参照してください。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRemoteDataAccess.#ctor">
      <summary>[セキュリティ クリティカル]<see cref="T:System.Data.SqlServerCe.SqlCeRemoteDataAccess" /> オブジェクトの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRemoteDataAccess.#ctor(System.String,System.String)">
      <summary>[セキュリティ クリティカル]<see cref="T:System.Data.SqlServerCe.SqlCeRemoteDataAccess" /> オブジェクトの新しいインスタンスを初期化し、Microsoft インターネット インフォメーション サービス (IIS) への匿名アクセスを設定します。</summary>
      <param name="internetUrl">SQL Server Compact サーバー エージェントに接続するときに使用する URL。</param>
      <param name="localConnectionString">SQL Server Compact データベースに接続するための OLE DB 接続文字列。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRemoteDataAccess.#ctor(System.String,System.String,System.String,System.String)">
      <summary>[セキュリティ クリティカル]<see cref="T:System.Data.SqlServerCe.SqlCeRemoteDataAccess" /> オブジェクトの新しいインスタンスを初期化し、Microsoft インターネット インフォメーション サービス (IIS) に対する基本認証または統合 Windows 認証を設定します。</summary>
      <param name="internetUrl">SQL Server Compact サーバー エージェントに接続するときに使用する URL。</param>
      <param name="internetLogin">SQL Server Compact サーバー エージェントに接続するときに使用するログイン名。</param>
      <param name="internetPassword">SQL Server Compact サーバー エージェントに接続するときに使用するパスワード。</param>
      <param name="localConnectionString">SQL Server Compact データベースに接続するための OLE DB 接続文字列。</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.CompressionLevel">
      <summary>[セキュリティ クリティカル]Push 操作および Pull 操作中に圧縮ルーチンで使用される圧縮量を指定します。</summary>
      <returns>設定された圧縮レベル。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.ConnectionManager">
      <summary>[セキュリティ クリティカル]<see cref="T:System.Data.SqlServerCe.SqlCeRemoteDataAccess" /> オブジェクトを有効にし、スマート デバイスの接続マネージャーの API を使用して、ネットワーク接続を確立します。接続は、同期の最後に解放されます。</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.ConnectionRetryTimeout">
      <summary>[セキュリティ クリティカル]SQL Server Compact クライアントが、失敗した要求の送信を再試行し続ける期間 (秒) を指定します。</summary>
      <returns>
        <see cref="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.ConnectionRetryTimeout" /> 値。既定値は 120 秒です。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.ConnectTimeout">
      <summary>[セキュリティ クリティカル]<see cref="T:System.Data.SqlServerCe.SqlCeRemoteDataAccess" /> オブジェクトがサーバーへの接続を待機する時間を、ミリ秒単位で取得または設定します。</summary>
      <returns>タイムアウトを表す <see cref="T:System.Int32" /> 値 (ミリ秒単位)。既定値はありません。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRemoteDataAccess.Dispose">
      <summary>[セキュリティ クリティカル]アンマネージ リソースをすべて解放します。</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.InternetLogin">
      <summary>[セキュリティ クリティカル]SQL Server Compact サーバー エージェントへの接続時に使用する、Microsoft インターネット インフォメーション サービス (IIS) のログイン名を指定します。</summary>
      <returns>SQL Server Compact サーバー エージェントに接続するときに使用する IIS のログイン名。既定では、ログインはありません。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.InternetPassword">
      <summary>[セキュリティ クリティカル]SQL Server Compact サーバー エージェントへの接続時に使用する、Microsoft インターネット インフォメーション サービス (IIS) のパスワードを指定します。</summary>
      <returns>SQL Server Compact サーバー エージェントに接続するときに使用する IIS のパスワード文字列。既定では、パスワードはありません。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.InternetProxyLogin">
      <summary>[セキュリティ クリティカル]認証を必要とする (<see cref="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.InternetProxyServer" /> プロパティで定義されている) プロキシ サーバーへの接続時に使用するログイン名を指定します。</summary>
      <returns>プロキシ サーバーのログイン名。既定では、ログインはありません。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.InternetProxyPassword">
      <summary>[セキュリティ クリティカル]認証を必要とする (<see cref="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.InternetProxyServer" /> プロパティで定義されている) プロキシ サーバーへの接続時に使用するパスワードを指定します。</summary>
      <returns>プロキシ サーバーのパスワード文字列。既定では、パスワードはありません。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.InternetProxyServer">
      <summary>[セキュリティ クリティカル]<see cref="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.InternetUrl" /> プロパティで指定した HTTP リソースへのアクセス時に使用するプロキシ サーバーを指定します。</summary>
      <returns>指定した HTTP リソースにアクセスするときに使用するプロキシ サーバー名 (または、IP アドレス) とポート番号 (<paramref name="ProxyServerName:Port" />)。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.InternetUrl">
      <summary>[セキュリティ クリティカル]SQL Server Compact サーバー エージェントへの接続に使用する URL を指定します。SQL Server Compact サーバー エージェントとは、SQL Server Compact クライアントを Microsoft SQL Server データベースに接続する Microsoft インターネット インフォメーション サービス (IIS) ISAPI DLL です。このプロパティは、必ず設定する必要があります。</summary>
      <returns>SQL Server Compact サーバー エージェントの URL (ファイル名 Sqlcesa35.dll も含む) を格納する文字列。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.LocalConnectionString">
      <summary>[セキュリティ クリティカル]SQL Server Compact データベースへの接続文字列を指定します。</summary>
      <returns>SQL Server Compact データベースへの接続文字列。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRemoteDataAccess.Pull(System.String,System.String,System.String)">
      <summary>[セキュリティ クリティカル]リモート SQL Server データベースからデータをダウンロードし、ローカルの SQL Server Compact データベース内の単一のテーブルに格納します。</summary>
      <param name="localTableName">抽出された SQL Server のレコードを受け取る SQL Server Compact のテーブルの名前。同名のテーブルが既に存在する場合、エラーが発生します。</param>
      <param name="sqlSelectString">SQL Server データベースから抽出して SQL Server Compact データベースに格納するテーブル、列、およびレコードを指定する任意の有効な Transact-SQL ステートメント。これには SELECT ステートメントやストアド プロシージャが含まれます。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRemoteDataAccess.Pull(System.String,System.String,System.String,System.Data.SqlServerCe.RdaTrackOption)">
      <summary>[セキュリティ クリティカル]リモート SQL Server データベースからデータをダウンロードし、ローカルの SQL Server Compact データベース内の単一のテーブルに格納します。</summary>
      <param name="localTableName">抽出された SQL Server のレコードを受け取る SQL Server Compact のテーブルの名前。同名のテーブルが既に存在する場合、エラーが発生します。</param>
      <param name="sqlSelectString">SQL Server データベースから抽出して SQL Server Compact データベースに格納するテーブル、列、およびレコードを指定する任意の有効な Transact-SQL ステートメント。これには SELECT ステートメントやストアド プロシージャが含まれます。</param>
      <param name="trackOption">プルされたテーブルに対する変更を SQL Server Compact が追跡するかどうか、また、プルされたテーブルに存在するインデックスを PRIMARY KEY 制約と共にデバイスに格納するかどうかを示すオプション。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRemoteDataAccess.Pull(System.String,System.String,System.String,System.Data.SqlServerCe.RdaTrackOption,System.String)">
      <summary>[セキュリティ クリティカル]リモート SQL Server データベースからデータをダウンロードし、ローカルの SQL Server Compact データベース内の単一のテーブルに格納します。</summary>
      <param name="localTableName">抽出された SQL Server のレコードを受け取る SQL Server Compact のテーブルの名前。同名のテーブルが既に存在する場合、エラーが発生します。</param>
      <param name="sqlSelectString">SQL Server データベースから抽出して SQL Server Compact データベースに格納するテーブル、列、およびレコードを指定する任意の有効な Transact-SQL ステートメント。これには SELECT ステートメントやストアド プロシージャが含まれます。</param>
      <param name="trackOption">プルされたテーブルに対する変更を SQL Server Compact が追跡するかどうか、また、プルされたテーブルに存在するインデックスを PRIMARY KEY 制約と共にデバイスに格納するかどうかを示すオプション。</param>
      <param name="errorTable">ローカル エラー テーブルの名前。このテーブルは、後に <see cref="Overload:System.Data.SqlServerCe.SqlCeRemoteDataAccess.Push" /> メソッドを呼び出して変更を SQL Server に送り返すときにエラーが発生した場合に作成されます。このオプションは、<paramref name="RdaTrackOption" /> 値が <see cref="F:System.Data.SqlServerCe.RdaTrackOption.TrackingOn" /> または <see cref="F:System.Data.SqlServerCe.RdaTrackOption.TrackingOnWithIndexes" /> の場合にだけ、指定できます。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRemoteDataAccess.Push(System.String,System.String)">
      <summary>[セキュリティ クリティカル]プルされ、追跡されている SQL Server Compact のテーブルから元の SQL Server テーブルへ、変更を送り返します。これらの変更は、個々のトランザクションで、個別にサーバーに適用されます。</summary>
      <param name="localTableName">抽出された SQL Server のレコードを受け取る SQL Server Compact のテーブルの名前。同名のテーブルが既に存在する場合、エラーが発生します。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRemoteDataAccess.Push(System.String,System.String,System.Data.SqlServerCe.RdaBatchOption)">
      <summary>[セキュリティ クリティカル]プルされ、追跡されている SQL Server Compact のテーブルから SQL Server テーブルへ、変更を送り返します。これらの変更は、個別にサーバーに適用するか、または 1 つのトランザクションでバッチ処理できます。</summary>
      <param name="localTableName">抽出された SQL Server のレコードを受け取る SQL Server Compact のテーブルの名前。同名のテーブルが既に存在する場合、エラーが発生します。</param>
      <param name="batchOption">SQL Server テーブルに送り返す変更を 1 つのトランザクションでバッチ処理するか、個別に適用するかを示すオプション。</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.ReceiveTimeout">
      <summary>[セキュリティ クリティカル]<see cref="T:System.Data.SqlServerCe.SqlCeRemoteDataAccess" /> オブジェクトがサーバー要求に対する応答を待機する時間を、ミリ秒単位で取得または設定します。</summary>
      <returns>タイムアウトを表す <see cref="T:System:Int32" /> 値 (ミリ秒単位)。既定値は 60 秒です。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.SendTimeout">
      <summary>[セキュリティ クリティカル]<see cref="T:System.Data.SqlServerCe.SqlCeRemoteDataAccess" /> オブジェクトがサーバーに要求を送信するまでの待機時間を、ミリ秒単位で取得または設定します。</summary>
      <returns>タイムアウトを表す <see cref="T:System.Int32" /> 値 (ミリ秒単位)。既定値はありません。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRemoteDataAccess.SubmitSql(System.String,System.String)">
      <summary>[セキュリティ クリティカル]リモート サーバー上の SQL Server データベースで実行する SQL ステートメントを送信します。</summary>
      <param name="sqlString">行を返さない任意の SQL ステートメント。</param>
      <param name="oleDBConnectionString">リモート SQL Server データベースに接続するための OLE DB 接続文字列。</param>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeReplication">
      <summary>[セキュリティ クリティカル]<see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> オブジェクトの新しいインスタンスを初期化します。SQL Server のレプリケーションの詳細については、SQL Server オンライン ブックを参照してください。SQL Server Compact でのマージ レプリケーションの詳細については、SQL Server Compact オンライン ブックを参照してください。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.#ctor">
      <summary>[セキュリティ クリティカル]<see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> オブジェクトの新しいインスタンスを初期化します。これは既定のコンストラクターです。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>[セキュリティ クリティカル]<see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> オブジェクトの新しいインスタンスを初期化し、パブリケーションに接続するために必要なプロパティを設定します。</summary>
      <param name="internetUrl">SQL Server Compact サーバー エージェントに接続するときに使用する URL。</param>
      <param name="internetLogin">SQL Server Compact サーバー エージェントに接続するときに使用するログイン名。</param>
      <param name="internetPassword">SQL Server Compact サーバー エージェントに接続するときに使用するパスワード。</param>
      <param name="publisher">パブリッシャーの名前。</param>
      <param name="publisherDatabase">パブリケーション データベースの名前。</param>
      <param name="publication">匿名マージ サブスクリプションで使用可能なパブリケーション名。</param>
      <param name="subscriber">サブスクライバーの名前。</param>
      <param name="subscriberConnectionString">Windows Mobile ベースのデバイス上の SQL Server Compact データベースに接続するための OLE DB 接続文字列。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>[セキュリティ クリティカル]<see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> オブジェクトの新しいインスタンスを初期化し、パブリケーションに接続するためのプロパティを設定します。</summary>
      <param name="internetUrl">SQL Server Compact サーバー エージェントに接続するときに使用する URL。</param>
      <param name="internetLogin">SQL Server Compact サーバー エージェントに接続するときに使用するログイン名。</param>
      <param name="internetPassword">SQL Server Compact サーバー エージェントに接続するときに使用するパスワード。</param>
      <param name="publisher">パブリッシャーの名前。</param>
      <param name="publisherDatabase">パブリケーション データベースの名前。</param>
      <param name="publisherLogin">パブリッシャーへの接続時に使用するログイン名。</param>
      <param name="publisherPassword">パブリッシャーへの接続時に使用するログイン パスワード。</param>
      <param name="publication">匿名マージ サブスクリプションで使用可能なパブリケーション名。</param>
      <param name="subscriber">サブスクライバーの名前。</param>
      <param name="subscriberConnectionString">Windows Mobile ベースのデバイス上の SQL Server Compact データベースに接続するための OLE DB 接続文字列。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.AddSubscription(System.Data.SqlServerCe.AddOption)">
      <summary>[セキュリティ クリティカル]既存の SQL Server パブリケーションに対する新しい匿名サブスクリプションを作成します。<see cref="M:System.Data.SqlServerCe.SqlCeReplication.AddSubscription(System.Data.SqlServerCe.AddOption)" /> メソッドを呼び出した後で、アプリケーションで <see cref="M:System.Data.SqlServerCe.SqlCeReplication.Synchronize" /> メソッドを呼び出して、最新のスナップショットに基づいて、新しいサブスクリプションをパブリケーションに同期させる必要があります。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.BeginSynchronize(System.AsyncCallback,System.Data.SqlServerCe.OnStartTableUpload,System.Data.SqlServerCe.OnStartTableDownload,System.Data.SqlServerCe.OnSynchronization,System.Object)">
      <summary>[セキュリティ クリティカル]非同期データの同期操作を開始します。同期が終了すると、<see cref="T:System.AsyncCallback" /> デリゲートが呼び出されます。同期中に、同期ステータス レポートが SyncStatusReport デリゲートに送信されます。</summary>
      <returns>この関数を呼び出すことによって開始される非同期操作の <see cref="T:System.IAsyncResult" /> インターフェイス。このインターフェイスを使用して、完了テストを実行したり、同期が終了するまで待機したりできます。</returns>
      <param name="onSyncCompletion">呼び出し元によって実装され、同期操作の最後に呼び出される <see cref="T:System.AsyncCallback" /> デリゲート。</param>
      <param name="onStartTableUpload">サーバーへのテーブル変更のアップロードが開始されるときに起動されるイベントに対するユーザー定義のデリゲート。</param>
      <param name="onStartTableDownload">サーバーからテーブル変更のダウンロードが開始されるときに起動されるイベントに対するユーザー定義のデリゲート。</param>
      <param name="onSynchronization">競合回避モジュールの動作中に報告された実行中の同期イベントを処理するユーザー定義のデリゲート。</param>
      <param name="state">
        <see cref="P:System.IAsyncResult.AsyncState" /> プロパティによって返されるユーザー定義のオブジェクト。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.BeginSynchronize(System.AsyncCallback,System.Object)">
      <summary>[セキュリティ クリティカル]非同期データの同期操作を開始します。同期が終了すると、<see cref="T:System.AsyncCallback" /> デリゲートが呼び出されます。同期中には、ステータス レポートが実行されません。</summary>
      <returns>この関数を呼び出すことによって開始される非同期操作の <see cref="T:System.IAsyncResult" /> インターフェイス。このインターフェイスを使用して、完了テストを実行したり、同期が終了するまで待機したりできます。</returns>
      <param name="onSyncCompletion">呼び出し元によって実装され、同期の最後に呼び出される <see cref="T:System.IAsyncResult" /> デリゲート。</param>
      <param name="state">
        <see cref="P:System.IAsyncResult.AsyncState" /> プロパティによって返されるユーザー定義のオブジェクト。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.CancelSynchronize">
      <summary>[セキュリティ クリティカル]<see cref="Overload:System.Data.SqlServerCe.SqlCeReplication.BeginSynchronize" /> メソッドを呼び出して開始した非同期データの同期化を、その実行中にキャンセルします。</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.CompressionLevel">
      <summary>[セキュリティ クリティカル]レプリケーション中に圧縮ルーチンで使用される圧縮量を指定します。</summary>
      <returns>圧縮レベル。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.ConnectionManager">
      <summary>[セキュリティ クリティカル]Replication オブジェクトを有効にし、スマート デバイスの接続マネージャーの API を使用して、ネットワーク接続を確立します。接続は、同期の最後に解放されます。</summary>
      <returns>接続マネージャーの設定を使用する場合は true、それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.ConnectionRetryTimeout">
      <summary>[セキュリティ クリティカル]確立された接続が失敗した後に、SQL Server Compact クライアントが要求の送信を再試行し続ける時間 (秒) を指定します。</summary>
      <returns>
        <see cref="P:System.Data.SqlServerCe.SqlCeReplication.ConnectionRetryTimeout" /> 値。既定値は 120 秒です。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.ConnectTimeout">
      <summary>[セキュリティ クリティカル]<see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> オブジェクトがサーバーへの接続を待機する時間を、ミリ秒単位で取得または設定します。</summary>
      <returns>タイムアウトを表す <see cref="T:System:Int32" /> 値 (ミリ秒単位)。既定値はありません。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.Dispose">
      <summary>[セキュリティ クリティカル]すべてのネイティブ リソースを解放します。</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.Distributor">
      <summary>[セキュリティ クリティカル]SQL Server のディストリビューターを指定します。</summary>
      <returns>パブリッシャーが使用するディストリビューターの名前。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.DistributorAddress">
      <summary>[セキュリティ クリティカル]SQL Server Reconciler がディストリビューターに接続するときに使用するネットワーク アドレスを指定します。</summary>
      <returns>ディストリビューターへの接続時に使用するネットワーク アドレス。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.DistributorLogin">
      <summary>[セキュリティ クリティカル]ディストリビューターへの接続時に使用するログイン名を指定します。</summary>
      <returns>ディストリビューターへの接続時に使用するログイン名。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.DistributorNetwork">
      <summary>[セキュリティ クリティカル]SQL Server Reconciler がディストリビューターと通信するときに使用するネットワーク プロトコルを指定します。</summary>
      <returns>SQL Server Reconciler がディストリビューターとの通信に使用する <see cref="T:System.Data.SqlServerCe.NetworkType" /> 定数。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.DistributorPassword">
      <summary>[セキュリティ クリティカル]ディストリビューターへの接続時に使用するログイン パスワードを指定します。</summary>
      <returns>ディストリビューターへの接続時に使用するパスワード。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.DistributorSecurityMode">
      <summary>[セキュリティ クリティカル]ディストリビューターへの接続時に使用するセキュリティ モードを指定します。</summary>
      <returns>ディストリビューターに適用するセキュリティ モードを指定する <see cref="T:System.Data.SqlServerCe.SecurityType" /> 定数。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.DropSubscription(System.Data.SqlServerCe.DropOption)">
      <summary>[セキュリティ クリティカル]SQL Server のパブリケーションに対するサブスクリプションを削除し、オプションで Windows Mobile ベースのデバイスから SQL Server Compact データベースを削除します。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.EndSynchronize(System.IAsyncResult)">
      <summary>[セキュリティ クリティカル]<see cref="Overload:System.Data.SqlServerCe.SqlCeReplication.BeginSynchronize" /> メソッドを呼び出して開始した非同期データの同期化を終了します。</summary>
      <param name="ar">
        <see cref="Overload:System.Data.SqlServerCe.SqlCeReplication.BeginSynchronize" /> メソッドが返す <see cref="T:System.IAsyncResult" /> インターフェイス。</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.ExchangeType">
      <summary>[セキュリティ クリティカル]パブリッシャーとサブスクライバー間の同期が両方向か、アップロードだけかを指定します。</summary>
      <returns>データをパブリッシャーだけにマージするか、またはパブリッシャーとサブスクライバーの両方向でマージするかを指定する <see cref="P:System.Data.SqlServerCe.SqlCeReplication.ExchangeType" /> 定数。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.HostName">
      <summary>[セキュリティ クリティカル]パブリッシャーへの接続時にデバイスに使用するホスト名を取得または設定します。</summary>
      <returns>デバイスのホスト名。既定では、ホスト名はありません。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.InternetLogin">
      <summary>[セキュリティ クリティカル]SQL Server Compact サーバー エージェントに接続するときに使用するログイン名を指定します。</summary>
      <returns>インターネット インフォメーション サービス (IIS) のログイン名。既定では、ログイン名はありません。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.InternetPassword">
      <summary>[セキュリティ クリティカル]SQL Server Compact サーバー エージェントに接続するときに使用するパスワードを指定します。</summary>
      <returns>インターネット インフォメーション サービス (IIS) のパスワード文字列。既定では、パスワードはありません。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.InternetProxyLogin">
      <summary>[セキュリティ クリティカル]認証を必要とする <see cref="P:System.Data.SqlServerCe.SqlCeReplication.InternetProxyServer" /> への接続時に使用するログイン名を指定します。</summary>
      <returns>プロキシ サーバーのログイン名。既定では、ログイン名はありません。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.InternetProxyPassword">
      <summary>[セキュリティ クリティカル]認証を必要とする <see cref="P:System.Data.SqlServerCe.SqlCeReplication.InternetProxyServer" /> への接続時に使用するパスワードを指定します。</summary>
      <returns>プロキシ サーバーのパスワード文字列。既定では、パスワードはありません。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.InternetProxyServer">
      <summary>[セキュリティ クリティカル]<see cref="P:System.Data.SqlServerCe.SqlCeReplication.InternetUrl" /> プロパティで指定した HTTP リソースへのアクセス時に使用するプロキシ サーバーを指定します。</summary>
      <returns>次の形式で指定した、プロキシ サーバー名 (または IP アドレス) と、オプションでポート番号。<paramref name="ProxyServerName" />:<paramref name="Port" /></returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.InternetUrl">
      <summary>[セキュリティ クリティカル]SQL Server Compact サーバー エージェントへの接続に使用する URL を指定します。</summary>
      <returns>URL 文字列。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.LoadProperties">
      <summary>[セキュリティ クリティカル]同期プロパティに保存されたすべての値を取得し、その保存値を <see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> クラス プロパティに入力します。</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.LoginTimeout">
      <summary>[セキュリティ クリティカル]接続が確立するまでの最大待機時間を秒で指定します。このプロパティは、インターネット インフォメーション サービス (IIS) を実行中のコンピューターとパブリッシャーまたはディストリビューターの間の接続時間に影響します。このプロパティでは、スマート デバイスと IIS の間の接続時間は、制御されません。</summary>
      <returns>接続が確立されるまでの秒数。既定値は 15 秒です。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.PostSyncCleanup">
      <summary>[セキュリティ クリティカル]実行する同期後クリーンアップ操作の種類を選択的に有効または無効にする値を取得または設定します。</summary>
      <returns>実行する同期後クリーンアップ操作を指定する値。統計の更新操作 (UpdateStats) と保有期間によるクリーン操作 (CleanByRetention) は、選択的に有効または無効にすることができます。詳細については、「解説」を参照してください。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.ProfileName">
      <summary>[セキュリティ クリティカル]<see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> オブジェクトが使用するディストリビューターで、エージェント プロファイルの名前を指定します。</summary>
      <returns>エージェント プロファイル名。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.Publication">
      <summary>[セキュリティ クリティカル]SQL Server Compact サブスクライバーで使用可能な SQL Server パブリケーション名を指定します。</summary>
      <returns>パブリケーションの名前。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.Publisher">
      <summary>[セキュリティ クリティカル]SQL Server のパブリッシャーの名前を指定します。パブリッシャーとは、SQL Server が実行されていて、パブリケーションを格納しているコンピューターです。</summary>
      <returns>パブリッシャーの名前。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.PublisherAddress">
      <summary>[セキュリティ クリティカル]パブリッシャーへの接続時に使用するネットワーク アドレスを指定します。</summary>
      <returns>パブリッシャーへの接続時に使用するネットワーク アドレス。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.PublisherChanges">
      <summary>[セキュリティ クリティカル]前回 <see cref="M:System.Data.SqlServerCe.SqlCeReplication.Synchronize" /> メソッドを呼び出したときにサブスクライバー側に適用された、パブリッシャーによる変更の合計件数を示します。</summary>
      <returns>パブリッシャー側で挿入、更新、削除された合計行数。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.PublisherConflicts">
      <summary>[セキュリティ クリティカル]前回 <see cref="M:System.Data.SqlServerCe.SqlCeReplication.Synchronize" /> メソッドを呼び出したときに、パブリッシャー側で発生した不整合の合計件数を示します。</summary>
      <returns>発生した不整合の合計件数。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.PublisherDatabase">
      <summary>[セキュリティ クリティカル]パブリケーション データベースの名前を指定します。</summary>
      <returns>パブリケーション データベースの名前。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.PublisherLogin">
      <summary>[セキュリティ クリティカル]パブリッシャーへの接続時に使用するログイン名を指定します。</summary>
      <returns>パブリッシャーのログイン名。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.PublisherNetwork">
      <summary>[セキュリティ クリティカル]SQL Server Replication Provider がパブリッシャーと通信するときに使用するネットワーク プロトコルを指定します。</summary>
      <returns>使用するネットワーク プロトコルを指定する <see cref="T:System.Data.SqlServerCe.NetworkType" /> 定数。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.PublisherPassword">
      <summary>[セキュリティ クリティカル]パブリッシャーへの接続時に使用するログイン パスワードを指定します。</summary>
      <returns>ログイン パスワード。既定では、パスワードはありません (空の文字列)。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.PublisherSecurityMode">
      <summary>[セキュリティ クリティカル]パブリッシャーへの接続時に使用するセキュリティ モードを指定します。</summary>
      <returns>セキュリティ モードを指定する <see cref="T:System.Data.SqlServerCe.SecurityType" /> 定数。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.QueryTimeout">
      <summary>[セキュリティ クリティカル]内部クエリが完了するまでの許容時間を秒で指定します。</summary>
      <returns>内部クエリが完了するまでの許容時間 (秒)。既定値は 300 秒です。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.ReceiveTimeout">
      <summary>[セキュリティ クリティカル]<see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> オブジェクトがサーバー要求に対する応答を待機する時間を、ミリ秒単位で取得または設定します。</summary>
      <returns>タイムアウトを表す <see cref="T:System:Int32" /> 値 (ミリ秒単位)。既定値は 60 秒です。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.ReinitializeSubscription(System.Boolean)">
      <summary>[セキュリティ クリティカル]再初期化するようサブスクリプションをマークします。このメソッドを呼び出した後で、アプリケーションで <see cref="M:System.Data.SqlServerCe.SqlCeReplication.Synchronize" /> メソッドを呼び出して、パブリケーションの最新のスナップショットをデバイスにダウンロードする必要があります。</summary>
      <param name="uploadBeforeReinitialize">True の場合は、サブスクライバー側でスナップショットを適用する前に、サブスクリプション データベースの変更がパブリッシャーにアップロードされます。既定値は False です。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.SaveProperties">
      <summary>[セキュリティ クリティカル]現在のサブスクリプションについて <see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> クラス プロパティ内に格納されたすべての値を取得し、システム テーブルに格納します。</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.SendTimeout">
      <summary>[セキュリティ クリティカル]<see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> オブジェクトがサーバーに要求を送信するまでの待機時間を、ミリ秒単位で取得または設定します。</summary>
      <returns>タイムアウトを表す <see cref="T:System.Int32" /> 値 (ミリ秒単位)。既定値はありません。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.SnapshotTransferType">
      <summary>[セキュリティ クリティカル]IIS を実行中のコンピューターに、ディストリビューターからスナップショット ファイルを転送する方法を制御します。スナップショット ファイルは、HTTP プロトコルまたは FTP プロトコルを使用して転送されます。</summary>
      <returns>
        <see cref="P:System.Data.SqlServerCe.SqlCeReplication.SnapshotTransferType" /> 値。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.Subscriber">
      <summary>[セキュリティ クリティカル]サブスクライバーの名前を指定します。</summary>
      <returns>サブスクライバー名。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.SubscriberChanges">
      <summary>[セキュリティ クリティカル]前回 <see cref="M:System.Data.SqlServerCe.SqlCeReplication.Synchronize" /> メソッドを呼び出したときにパブリッシャー側に適用された、サブスクライバーによる変更の合計件数を示します。</summary>
      <returns>サブスクライバー側で挿入、更新、削除された合計行数。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.SubscriberConflicts">
      <summary>[セキュリティ クリティカル]このプロパティは SQL Server Compact では使用されていません。</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.SubscriberConnectionString">
      <summary>[セキュリティ クリティカル]SQL Server Compact データベースへの接続文字列を指定します。</summary>
      <returns>SQL Server Compact データベースへの接続文字列。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.Synchronize">
      <summary>[セキュリティ クリティカル]SQL Server Compact のサブスクリプションと SQL Server のパブリッシャーとの間のマージ レプリケーションを起動します。</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.Validate">
      <summary>[セキュリティ クリティカル]同期中に SQL Server Compact のレプリケーションで実行されるデータ評価のタイプを指定します。</summary>
      <returns>実行するデータ評価のタイプを指定する <see cref="T:System.Data.SqlServerCe.ValidateType" /> 定数。</returns>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeResultSet">
      <summary>更新、スクロール、およびバインドが可能なカーソル。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.#ctor">
      <summary>[セキュリティ クリティカル]使用しないでください。<see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> を作成するには、<see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> の <see cref="M:System.Data.Sql.ISqlExecutionContext.ExecuteResultSet(System.Data.ResultSetOptions)" /> メソッドを呼び出す必要があります。</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeResultSet.ContainsListCollection"></member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.CreateRecord">
      <summary>サーバーに新しい行を作成し、<see cref="T:System.Data.SqlServerCe.SqlCeUpdatableRecord" /> オブジェクトを返します。</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> のメタデータがあらかじめ格納された SqlCeUpdatableRecord。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.Delete">
      <summary>サーバーのデータ ソースから現在のレコードを削除します。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetBoolean(System.Int32)">
      <summary>指定したインデックス位置にある列の値をブール値として返します。</summary>
      <returns>指定したインデックス位置にある列の値。</returns>
      <param name="ordinal">データの取得元となる列の序数位置。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetByte(System.Int32)">
      <summary>指定したインデックス位置にある列の値をバイト値として返します。</summary>
      <returns>指定したインデックス位置にある列の値。</returns>
      <param name="ordinal">データの取得元となる列の序数位置。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>指定したフィールドの指定した位置を開始位置として、連続するバイトをバッファーにコピーします。</summary>
      <returns>実際にバッファーにコピーされたバイト数。</returns>
      <param name="ordinal">データの取得元となる列の序数位置。</param>
      <param name="dataIndex">データ コピーの開始位置となるフィールド内のオフセット (バイト単位)。</param>
      <param name="buffer">データのコピー先のバッファー。</param>
      <param name="bufferIndex">コピーの開始位置となるバッファー内のオフセット。</param>
      <param name="length">コピーする最大バイト数。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>指定したフィールドの指定した位置を開始位置として、連続する文字をバッファーにコピーします。</summary>
      <returns>実際にコピーされた文字数。</returns>
      <param name="ordinal">データの取得元となるフィールドの序数位置。</param>
      <param name="dataIndex">コピーの開始位置となるフィールド内のオフセット (文字単位)。</param>
      <param name="buffer">データのコピー先のバッファー。</param>
      <param name="bufferIndex">コピーの開始位置となるバッファー内のオフセット。</param>
      <param name="length">コピーする最大バイト数。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetDateTime(System.Int32)">
      <summary>指定したインデックス位置にある列の値を DateTime として返します。</summary>
      <returns>指定したインデックス位置にある列の値。</returns>
      <param name="ordinal">データの取得元となる列の序数位置。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetDecimal(System.Int32)">
      <summary>指定したインデックス位置にある列の値を Double として返します。</summary>
      <returns>指定したインデックス位置にある列の値。</returns>
      <param name="ordinal">データの取得元となる列の序数位置。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetDouble(System.Int32)">
      <summary>指定したインデックス位置にある列の値を Double として返します。</summary>
      <returns>指定したインデックス位置にある列の値。</returns>
      <param name="ordinal">データの取得元となる列の序数位置。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetEnumerator">
      <summary>データ リーダー内の行を反復処理するために使用できる <see cref="T:System.Collections.IEnumerator" /> を返します。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetFloat(System.Int32)">
      <summary>指定したインデックス位置にある列の値を Float として返します。</summary>
      <returns>指定したインデックス位置にある列の値。</returns>
      <param name="ordinal">データの取得元となる列の序数位置。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetGuid(System.Int32)">
      <summary>指定したインデックス位置にある列の値を GUID として返します。</summary>
      <returns>指定したインデックス位置にある列の値。</returns>
      <param name="ordinal">データの取得元となる列の序数位置。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetInt16(System.Int32)">
      <summary>指定したインデックス位置にある列の値を Int16 として返します。</summary>
      <returns>指定したインデックス位置にある列の値。</returns>
      <param name="ordinal">データの取得元となる列の序数位置。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetInt32(System.Int32)">
      <summary>指定したインデックス位置にある列の値を Int32 として返します。</summary>
      <returns>指定したインデックス位置にある列の値。</returns>
      <param name="ordinal">TBD</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetInt64(System.Int32)">
      <summary>指定したインデックス位置にある列の値を Int64 として返します。</summary>
      <returns>指定したインデックス位置にある列の値。</returns>
      <param name="ordinal">データの取得元となる列の序数位置。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetList">
      <summary>
        <see cref="T:System.Data.SqlServerCe.ResultSetView" /> のインスタンスを返します。</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.ResultSetView" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlBinary(System.Int32)">
      <summary>指定したインデックス位置にある列の値を SqlBinary 型として返します。</summary>
      <returns>指定したインデックス位置にある列の値。</returns>
      <param name="ordinal">データの取得元となる列の序数位置。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlBoolean(System.Int32)">
      <summary>指定したインデックス位置にある列の値を SqlBoolean 型として返します。</summary>
      <returns>指定したインデックス位置にある列の値。</returns>
      <param name="ordinal">データの取得元となる列の序数位置。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlByte(System.Int32)">
      <summary>指定したインデックス位置にある列の値を SqlByte 型として返します。</summary>
      <returns>指定したインデックス位置にある列の値。</returns>
      <param name="ordinal">データの取得元となる列の序数位置。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlDateTime(System.Int32)">
      <summary>指定したインデックス位置にある列の値を SqlDateTime 型として返します。</summary>
      <returns>指定したインデックス位置にある列の値。</returns>
      <param name="ordinal">データの取得元となる列の序数位置。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlDecimal(System.Int32)">
      <summary>指定したインデックス位置にある列の値を SqlDecimal 型として返します。</summary>
      <returns>指定したインデックス位置にある列の値。</returns>
      <param name="ordinal">データの取得元となる列の序数位置。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlDouble(System.Int32)">
      <summary>指定したインデックス位置にある列の値を SqlDouble 型として返します。</summary>
      <returns>指定したインデックス位置にある列の値。</returns>
      <param name="ordinal">データの取得元となる列の序数位置。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlGuid(System.Int32)">
      <summary>指定したインデックス位置にある列の値を SqlGuid 型として返します。</summary>
      <returns>指定したインデックス位置にある列の値。</returns>
      <param name="ordinal">データの取得元となる列の序数位置。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlInt16(System.Int32)">
      <summary>指定したインデックス位置にある列の値を SqlInt16 型として返します。</summary>
      <returns>指定したインデックス位置にある列の値。</returns>
      <param name="ordinal">データの取得元となる列の序数位置。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlInt32(System.Int32)">
      <summary>指定したインデックス位置にある列の値を SqlInt32 型として返します。</summary>
      <returns>指定したインデックス位置にある列の値。</returns>
      <param name="ordinal">データの取得元となる列の序数位置。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlInt64(System.Int32)">
      <summary>指定したインデックス位置にある列の値を SqlInt64 型として返します。</summary>
      <returns>指定したインデックス位置にある列の値。</returns>
      <param name="ordinal">データの取得元となる列の序数位置。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlMetaData(System.Int32)">
      <summary>指定した列に関連付けられたメタデータ情報を返します。</summary>
      <returns>指定したインデックス位置にある列のメタデータ。</returns>
      <param name="ordinal">データの取得元となる列の序数位置。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlMoney(System.Int32)">
      <summary>指定したインデックス位置にある列の値を SqlMoney 型として返します。</summary>
      <returns>指定したインデックス位置にある列の値。</returns>
      <param name="ordinal">データの取得元となる列の序数位置。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlSingle(System.Int32)">
      <summary>指定したインデックス位置にある列の値を SqlSingle 型として返します。</summary>
      <returns>指定したインデックス位置にある列の値。</returns>
      <param name="ordinal">データの取得元となる列の序数位置。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlString(System.Int32)">
      <summary>指定したインデックス位置にある列の値を SqlString 型として返します。</summary>
      <returns>指定したインデックス位置にある列の値。</returns>
      <param name="ordinal">データの取得元となる列の序数位置。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetString(System.Int32)">
      <summary>指定したインデックス位置にある列の値を String 型として返します。</summary>
      <returns>指定したインデックス位置にある列の値。</returns>
      <param name="ordinal">データの取得元となる列の序数位置。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetValue(System.Int32)">
      <summary>指定したフィールドの値を返します。</summary>
      <returns>指定したフィールドの値を格納しているオブジェクト。</returns>
      <param name="ordinal">値を取得する列の序数位置。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetValues(System.Object[])">
      <summary>指定したレコードのすべてのフィールドの配列を取得します。</summary>
      <returns>配列内のインスタンス数。</returns>
      <param name="values">値が返されたときに格納するための Object 型配列。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.Insert(System.Data.SqlServerCe.SqlCeUpdatableRecord)">
      <summary>指定した <see cref="T:System.Data.SqlServerCe.SqlCeUpdatableRecord" /> を基になる行セットに挿入します。</summary>
      <param name="record">挿入するレコード。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.Insert(System.Data.SqlServerCe.SqlCeUpdatableRecord,System.Data.SqlServerCe.DbInsertOptions)">
      <summary>指定した <see cref="T:System.Data.SqlServerCe.SqlCeUpdatableRecord" /> を基になる行セットに挿入し、カーソルの配置方法を指定します。</summary>
      <param name="record">挿入するレコード。</param>
      <param name="options">挿入の後にカーソルを配置する方法を指定する <see cref="T:System.Data.SqlServerCe.DbInsertOptions" /> オプション。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.IsDBNull(System.Int32)">
      <summary>指定した序数位置にあるフィールドが null かどうかを判断します。</summary>
      <returns>指定したフィールドが null の場合は、true。それ以外の場合は、false。</returns>
      <param name="ordinal">値を取得する列の序数位置。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.IsSetAsDefault(System.Int32)">
      <summary>指定された序数位置にあるフィールドが基になる既定値を使用するように設定されているかどうかを確認します。</summary>
      <returns>指定したフィールドが基になる既定値を使用するように設定されている場合は、true。それ以外の場合は、false。</returns>
      <param name="ordinal">値を取得する列の序数位置。</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeResultSet.Item(System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> のインデクサーとして機能します。</summary>
      <returns>指定したインデックス位置にあるレコード。</returns>
      <param name="index">ResultSet 内での項目の位置。</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeResultSet.Item(System.String)">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> のインデクサーとして機能します。</summary>
      <returns>指定した名前と一致するレコード。</returns>
      <param name="name">ResultSet 内のレコードの名前。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.OnMove"></member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.ReadAbsolute(System.Int32)">
      <summary>ResultSet 内の特定のレコードにリーダーを移動します。</summary>
      <returns>正常に操作できた場合は true。それ以外の場合は false。</returns>
      <param name="position">リーダーの移動先の位置。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.ReadFirst">
      <summary>ResultSet 内の最初のレコードにリーダーを移動します。</summary>
      <returns>正常に操作できた場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.ReadLast">
      <summary>ResultSet 内の最後のレコードにリーダーを移動します。</summary>
      <returns>正常に操作できた場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.ReadPrevious">
      <summary>現在のレコードの前にあるレコードにリーダーを移動します。</summary>
      <returns>正常に操作できた場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.ReadRelative(System.Int32)">
      <summary>現在の位置から指定した分だけリーダーを移動します。</summary>
      <returns>正常に操作できた場合は true。それ以外の場合は false。</returns>
      <param name="position">リーダーを移動する位置の数。</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeResultSet.ResultSetView">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> をコントロールにデータ バインドするときに使用されます。</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.ResultSetView" />。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeResultSet.Scrollable">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> がスクロール可能かどうかを判断します。</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> がスクロール可能な場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeResultSet.Sensitivity">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> の感度を判断します。</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> の <see cref="T:System.Data.SqlServerCe.ResultSetSensitivity" />。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetBoolean(System.Int32,System.Boolean)">
      <summary>指定した列の値に、渡されたブール値を設定します。</summary>
      <param name="ordinal">設定する列の序数位置。</param>
      <param name="value">指定された列に代入する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetByte(System.Int32,System.Byte)">
      <summary>指定した列の値に、渡されたバイト値を設定します。</summary>
      <param name="ordinal">設定する列の序数位置。</param>
      <param name="value">指定された列に代入する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>指定したバッファーから指定した列にバイトの長さをコピーします。コピーは、フィールド内の指定位置から開始されます。</summary>
      <param name="ordinal">設定する列の序数位置。</param>
      <param name="dataIndex">データ コピーを開始する列内の位置。</param>
      <param name="buffer">コピーするデータを格納しているバッファー。</param>
      <param name="bufferIndex">データのコピー元バッファー内のオフセット。</param>
      <param name="length">コピーする最大バイト数。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetChar(System.Int32,System.Char)">
      <summary>指定した列の値に、渡された Char 値を設定します。</summary>
      <param name="ordinal">設定する列の序数位置。</param>
      <param name="c">指定された列に代入する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>指定したバッファーから指定した列に文字の長さをコピーします。コピーは、フィールド内の指定位置から開始されます。</summary>
      <param name="ordinal">設定する列の序数位置。</param>
      <param name="dataIndex">データ コピーを開始する列内の位置。</param>
      <param name="buffer">コピーするデータを格納しているバッファー。</param>
      <param name="bufferIndex">データのコピー元バッファー内のオフセット。</param>
      <param name="length">コピーする最大バイト数。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetDateTime(System.Int32,System.DateTime)">
      <summary>指定した列の値に、渡された DateTime 値を設定します。</summary>
      <param name="ordinal">設定する列の序数位置。</param>
      <param name="value">指定された列に代入する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetDecimal(System.Int32,System.Decimal)">
      <summary>指定した列の値に、渡された Decimal 値を設定します。</summary>
      <param name="ordinal">設定する列の序数位置。</param>
      <param name="value">指定された列に代入する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetDefault(System.Int32)">
      <summary>指定した列に既定値を設定します。</summary>
      <param name="ordinal">設定する列の序数位置。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetDouble(System.Int32,System.Double)">
      <summary>指定した列の値に、渡された Double 値を設定します。</summary>
      <param name="ordinal">設定する列の序数位置。</param>
      <param name="value">指定された列に代入する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetFloat(System.Int32,System.Single)">
      <summary>指定した列の値に、渡された Float 値を設定します。</summary>
      <param name="ordinal">設定する列の序数位置。</param>
      <param name="value">指定された列に代入する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetGuid(System.Int32,System.Guid)">
      <summary>指定した列の値に、渡された Guid 値を設定します。</summary>
      <param name="ordinal">設定する列の序数位置。</param>
      <param name="value">指定された列に代入する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetInt16(System.Int32,System.Int16)">
      <summary>指定した列の値に、渡された Int16 値を設定します。</summary>
      <param name="ordinal">設定する列の序数位置。</param>
      <param name="value">指定された列に代入する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetInt32(System.Int32,System.Int32)">
      <summary>指定した列の値に、渡された Int32 値を設定します。</summary>
      <param name="ordinal">設定する列の序数位置。</param>
      <param name="value">指定された列に代入する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetInt64(System.Int32,System.Int64)">
      <summary>指定した列の値に、渡された Int64 値を設定します。</summary>
      <param name="ordinal">設定する列の序数位置。</param>
      <param name="value">指定された列に代入する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetObjectRef(System.Int32,System.Object)">
      <summary>指定した位置の列にオブジェクトをバインドします。</summary>
      <param name="ordinal">設定する列の序数位置。</param>
      <param name="buffer">指定された列に代入する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlBinary(System.Int32,System.Data.SqlTypes.SqlBinary)">
      <summary>指定した列の値に、渡されてきた SqlBinary 値を設定します。</summary>
      <param name="ordinal">設定する列の序数位置。</param>
      <param name="value">指定された列に代入する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlBoolean(System.Int32,System.Data.SqlTypes.SqlBoolean)">
      <summary>指定した列の値に、渡された SqlBoolean 値を設定します。</summary>
      <param name="ordinal">設定する列の序数位置。</param>
      <param name="value">指定された列に代入する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlByte(System.Int32,System.Data.SqlTypes.SqlByte)">
      <summary>指定した列の値に、渡された SqlByte 値を設定します。</summary>
      <param name="ordinal">設定する列の序数位置。</param>
      <param name="value">指定された列に代入する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlDateTime(System.Int32,System.Data.SqlTypes.SqlDateTime)">
      <summary>指定した列の値に、渡された SqlDateTime 値を設定します。</summary>
      <param name="ordinal">設定する列の序数位置。</param>
      <param name="value">指定された列に代入する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlDecimal(System.Int32,System.Data.SqlTypes.SqlDecimal)">
      <summary>指定した列の値に、渡された SqlDecimal 値を設定します。</summary>
      <param name="ordinal">設定する列の序数位置。</param>
      <param name="value">指定された列に代入する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlDouble(System.Int32,System.Data.SqlTypes.SqlDouble)">
      <summary>指定した列の値に、渡された SqlDouble 値を設定します。</summary>
      <param name="ordinal">設定する列の序数位置。</param>
      <param name="value">指定された列に代入する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlGuid(System.Int32,System.Data.SqlTypes.SqlGuid)">
      <summary>指定した列の値に、渡された SqlGuid 値を設定します。</summary>
      <param name="ordinal">設定する列の序数位置。</param>
      <param name="value">指定された列に代入する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlInt16(System.Int32,System.Data.SqlTypes.SqlInt16)">
      <summary>指定した列の値に、渡された SqlInt16 値を設定します。</summary>
      <param name="ordinal">設定する列の序数位置。</param>
      <param name="value">指定された列に代入する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlInt32(System.Int32,System.Data.SqlTypes.SqlInt32)">
      <summary>指定した列の値に、渡された SqlInt32 値を設定します。</summary>
      <param name="ordinal">設定する列の序数位置。</param>
      <param name="value">指定された列に代入する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlInt64(System.Int32,System.Data.SqlTypes.SqlInt64)">
      <summary>指定した列の値に、渡された SqlInt64 値を設定します。</summary>
      <param name="ordinal">設定する列の序数位置。</param>
      <param name="value">指定された列に代入する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlMoney(System.Int32,System.Data.SqlTypes.SqlMoney)">
      <summary>指定した列の値に、渡された SqlMoney 値を設定します。</summary>
      <param name="ordinal">設定する列の序数位置。</param>
      <param name="value">指定された列に代入する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlSingle(System.Int32,System.Data.SqlTypes.SqlSingle)">
      <summary>指定した列の値に、渡された SqlSingle 値を設定します。</summary>
      <param name="ordinal">設定する列の序数位置。</param>
      <param name="value">指定された列に代入する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlString(System.Int32,System.Data.SqlTypes.SqlString)">
      <summary>指定した列の値に、渡された SqlString 値を設定します。</summary>
      <param name="ordinal">設定する列の序数位置。</param>
      <param name="value">指定された列に代入する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetString(System.Int32,System.String)">
      <summary>指定した列の値に、渡された String 値を設定します。</summary>
      <param name="ordinal">設定する列の序数位置。</param>
      <param name="value">指定された列に代入する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetValue(System.Int32,System.Object)">
      <summary>指定した列の値に、渡された値を設定します。</summary>
      <param name="ordinal">設定する列の序数位置。</param>
      <param name="value">指定された列に代入する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetValues(System.Object[])">
      <summary>指定したレコード内の各フィールドに、指定した配列内の対応する値を設定します。</summary>
      <returns>配列からコピーされる値の数。</returns>
      <param name="values">設定する値を格納する配列。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.System#Collections#IEnumerable#GetEnumerator"></member>
    <member name="P:System.Data.SqlServerCe.SqlCeResultSet.System#ComponentModel#IListSource#ContainsListCollection"></member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.System#ComponentModel#IListSource#GetList"></member>
    <member name="P:System.Data.SqlServerCe.SqlCeResultSet.Updatable">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> 内の値が変更可能かどうかを判断します。</summary>
      <returns>レコード内の値を変更できる場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.Update">
      <summary>現在のレコードから、サーバーの基になる行に変更が送信されます。</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeRowUpdatedEventArgs">
      <summary>
        <see cref="E:System.Data.SqlServerCe.SqlCeDataAdapter.RowUpdated" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeRowUpdatedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="dataRow">
        <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> を通じて送信された <see cref="T:System.Data.DataRow" />。</param>
      <param name="command">
        <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> の呼び出し時に実行される <see cref="T:System.Data.IDbCommand" />。</param>
      <param name="statementType">実行されたクエリの種類を指定する <see cref="T:System.Data.StatementType" /> 値の 1 つ。</param>
      <param name="tableMapping">
        <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> を通じて送信された <see cref="T:System.Data.Common.DataTableMapping" />。</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRowUpdatedEventArgs.Command">
      <summary>
        <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> の呼び出し時に実行される <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> を取得します。</summary>
      <returns>
        <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> の呼び出し時に実行される <see cref="T:System.Data.SqlServerCe.SqlCeCommand" />。</returns>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeRowUpdatedEventHandler">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" /> の <see cref="E:System.Data.SqlServerCe.SqlCeDataAdapter.RowUpdated" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベント データを格納している <see cref="T:System.Data.SqlServerCe.SqlCeRowUpdatedEventArgs" />。</param>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeRowUpdatingEventArgs">
      <summary>
        <see cref="E:System.Data.SqlServerCe.SqlCeDataAdapter.RowUpdating" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeRowUpdatingEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="dataRow">
        <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> を実行する <see cref="T:System.Data.DataRow" />。</param>
      <param name="command">
        <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 処理中に実行する <see cref="T:System.Data.IDbCommand" />。</param>
      <param name="statementType">実行されたクエリの種類を指定する <see cref="T:System.Data.StatementType" /> 値の 1 つ。</param>
      <param name="tableMapping">
        <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> を通じて送信された <see cref="T:System.Data.Common.DataTableMapping" />。</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRowUpdatingEventArgs.Command">
      <summary>
        <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> の実行時に実行する <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> を取得または設定します。</summary>
      <returns>
        <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> の実行時に実行する <see cref="T:System.Data.SqlServerCe.SqlCeCommand" />。</returns>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeRowUpdatingEventHandler">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" /> の <see cref="E:System.Data.SqlServerCe.SqlCeDataAdapter.RowUpdating" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベント データを格納している <see cref="T:System.Data.SqlServerCe.SqlCeRowUpdatingEventArgs" />。</param>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeTransaction">
      <summary>データ ソースで作成する SQL トランザクションを表します。このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeTransaction.Commit">
      <summary>データベース トランザクションをコミットします。</summary>
      <exception cref="T:System.Exception">トランザクションをコミットしようとしているときにエラーが発生しました。</exception>
      <exception cref="T:System.InvalidOperationException">トランザクションは既にコミットされているかロールバックされています。または接続が解除されています。</exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeTransaction.Commit(System.Data.SqlServerCe.CommitMode)">
      <summary>指定された <see cref="T:System.Data.SqlServerCe.CommitMode" /> を使用して、データベース トランザクションをコミットします。</summary>
      <exception cref="T:System.Exception">トランザクションをコミットしようとしているときにエラーが発生しました。</exception>
      <exception cref="T:System.InvalidOperationException">トランザクションは既にコミットされているかロールバックされています。または接続が解除されています。</exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeTransaction.CurrentTransactionBsn">
      <summary>トランザクションの開始シーケンス番号 (BSN) を取得します。</summary>
      <returns>トランザクションの BSN。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeTransaction.Dispose">
      <summary>トランザクションに関連付けられているすべての <see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> オブジェクトを解放します。</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeTransaction.IsolationLevel">
      <summary>このトランザクションの <see cref="T:System.Data.IsolationLevel" /> を指定します。</summary>
      <returns>トランザクションの <see cref="T:System.Data.IsolationLevel" />。.NET Compact Framework Data Provider for SQL Server Compact は、ReadCommitted、Serializable、および ReadRepeatable の分離レベルをサポートしています。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeTransaction.Rollback">
      <summary>トランザクションを保留状態からロールバックします。</summary>
      <exception cref="T:System.Exception">トランザクションをコミットしようとしているときにエラーが発生しました。</exception>
      <exception cref="T:System.InvalidOperationException">トランザクションは既にコミットされているかロールバックされています。または接続が解除されています。</exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeTransaction.TrackingContext">
      <summary>トランザクションによって SQL Server Compact データベース テーブルに対する追跡操作に関連付けられているアプリケーション固有のコンテキスト情報を取得または設定します。</summary>
      <returns>アプリケーション固有の情報を表す値。</returns>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeTransactionInProgressException">
      <summary> トランザクションの進行中に操作を試みた場合に基になるプロバイダーが Microsoft SQL Server Compact データ ソースからエラーを返したときにスローされる例外。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeTransactionInProgressException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>シリアル化で役立つコンストラクター。</summary>
      <param name="info">シリアル化情報。</param>
      <param name="context">ストリーミング コンテキスト。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeTransactionInProgressException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>[セキュリティ クリティカル] オブジェクトのシリアル化に必要なデータを SerializationInfo に格納します。</summary>
      <param name="info">シリアル化情報。</param>
      <param name="context">ストリーミング コンテキスト。</param>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeType"></member>
    <member name="P:System.Data.SqlServerCe.SqlCeType.SqlDbType"></member>
    <member name="M:System.Data.SqlServerCe.SqlCeType.ToString"></member>
    <member name="T:System.Data.SqlServerCe.SqlCeUpdatableRecord">
      <summary>データ ソースから取得した更新可能な値の行を表します。<see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> オブジェクトには、1 つ以上の UpdatableRecords が格納されます。</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeUpdatableRecord.FieldCount">
      <summary>指定したレコード内のフィールド数を返します。</summary>
      <returns>レコード内のフィールド数。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetBoolean(System.Int32)">
      <summary>指定したフィールドの値を bool として返します。</summary>
      <param name="ordinal">値の取得元となるフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetByte(System.Int32)">
      <summary>指定したフィールドの値を byte として返します。</summary>
      <param name="ordinal">値の取得元となるフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>指定したフィールドの指定した位置を開始位置として、連続するバイトをバッファーにコピーします。</summary>
      <param name="ordinal">データの取得元となる列の序数位置。</param>
      <param name="dataIndex">データ コピーの開始位置となるフィールド内のオフセット (バイト単位)。</param>
      <param name="buffer">データのコピー先のバッファー。</param>
      <param name="bufferIndex">コピーの開始位置となるバッファー内のオフセット。</param>
      <param name="length">コピーする最大バイト数。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetChar(System.Int32)">
      <summary>指定したフィールドの値を char として返します。</summary>
      <param name="ordinal">値の取得元となるフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>指定したフィールドの指定した位置を開始位置として、連続する char をバッファーにコピーします。</summary>
      <param name="ordinal">データの取得元となるフィールドの序数位置。</param>
      <param name="dataIndex">コピーの開始位置となるフィールド内のオフセット (文字単位)。</param>
      <param name="buffer">データのコピー先のバッファー。</param>
      <param name="bufferIndex">コピーの開始位置となるバッファー内のオフセット。</param>
      <param name="length">コピーする最大バイト数。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetData(System.Int32)">
      <summary>現在のレコードに位置する <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> を返します。</summary>
      <param name="ordinal">値の取得元となるフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetDataTypeName(System.Int32)">
      <summary>指定されたフィールドの datatype 名を返します。</summary>
      <param name="ordinal">値の取得元となるフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetDateTime(System.Int32)">
      <summary>指定したフィールドの値を DateTime として返します。</summary>
      <param name="ordinal">値の取得元となるフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetDecimal(System.Int32)">
      <summary>指定したフィールドの値を decimal として返します。</summary>
      <param name="ordinal">値の取得元となるフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetDouble(System.Int32)">
      <summary>指定したフィールドの値を double として返します。</summary>
      <param name="ordinal">値の取得元となるフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetFieldType(System.Int32)">
      <summary>指定されたフィールドの CLR データ型を返します。</summary>
      <returns>このフィールドの CLR データ型。</returns>
      <param name="ordinal">値の取得元となるフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetFloat(System.Int32)">
      <summary>指定したフィールドの値を float として返します。</summary>
      <param name="ordinal">値の取得元となるフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetGuid(System.Int32)">
      <summary>指定したフィールドの値を GUID として返します。</summary>
      <param name="ordinal">値の取得元となるフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetInt16(System.Int32)">
      <summary>指定したフィールドの値を int16 として返します。</summary>
      <param name="ordinal">値の取得元となるフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetInt32(System.Int32)">
      <summary>指定したフィールドの値を int32 として返します。</summary>
      <param name="ordinal">値の取得元となるフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetInt64(System.Int32)">
      <summary>指定したフィールドの値を int64 として返します。</summary>
      <param name="ordinal">値の取得元となるフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetName(System.Int32)">
      <summary>指定したフィールドの名前を返します。</summary>
      <param name="ordinal">値の取得元となるフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetOrdinal(System.String)">
      <summary>渡された名前で指定されたフィールドの序数を返します。</summary>
      <param name="name">序数を決定するためのフィールドの名前。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlBinary(System.Int32)">
      <summary>指定したフィールドの値を SqlBinary として返します。</summary>
      <param name="ordinal">値の取得元となるフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlBoolean(System.Int32)">
      <summary>指定したフィールドの値を SqlBoolean として返します。</summary>
      <param name="ordinal">値の取得元となるフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlByte(System.Int32)">
      <summary>指定したフィールドの値を SqlByte として返します。</summary>
      <param name="ordinal">値の取得元となるフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlBytesRef(System.Int32)">
      <summary>指定したフィールドの値を格納する SqlBytes インスタンスへの参照を返します。</summary>
      <returns>SqlBytes インスタンスへの参照。</returns>
      <param name="ordinal">値の取得元となるフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlCharsRef(System.Int32)">
      <summary>指定したフィールドの値を格納する SqlChars インスタンスへの参照を返します。</summary>
      <returns>SqlChars インスタンスへの参照。</returns>
      <param name="ordinal">値の取得元となるフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlDateTime(System.Int32)">
      <summary>指定したフィールドの値を SqlDateTime として返します。</summary>
      <param name="ordinal">値の取得元となるフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlDecimal(System.Int32)">
      <summary>指定したフィールドの値を SqlDecimal として返します。</summary>
      <param name="ordinal">値の取得元となるフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlDouble(System.Int32)">
      <summary>指定したフィールドの値を SqlDouble として返します。</summary>
      <param name="ordinal">値の取得元となるフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlGuid(System.Int32)">
      <summary>指定したフィールドの値を SqlGuid として返します。</summary>
      <param name="ordinal">値の取得元となるフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlInt16(System.Int32)">
      <summary>指定したフィールドの値を SqlInt16 として返します。</summary>
      <param name="ordinal">値の取得元となるフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlInt32(System.Int32)">
      <summary>指定したフィールドの値を SqlInt32 として返します。</summary>
      <param name="ordinal">値の取得元となるフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlInt64(System.Int32)">
      <summary>指定したフィールドの値を SqlInt64 として返します。</summary>
      <param name="ordinal">値の取得元となるフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlMetaData(System.Int32)">
      <summary>指定したフィールドの値を SqlMetaData として返します。</summary>
      <param name="ordinal">値の取得元となるフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlMoney(System.Int32)">
      <summary>指定したフィールドの値を SqlMoney として返します。</summary>
      <param name="ordinal">値の取得元となるフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlSingle(System.Int32)">
      <summary>指定したフィールドの値を SqlSingle として返します。</summary>
      <param name="ordinal">値の取得元となるフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlString(System.Int32)">
      <summary>指定したフィールドの値を SqlString として返します。</summary>
      <param name="ordinal">値の取得元となるフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetString(System.Int32)">
      <summary>指定したフィールドの値を string として返します。</summary>
      <param name="ordinal">値の取得元となるフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetValue(System.Int32)">
      <summary>指定したレコードの値を返します。</summary>
      <param name="ordinal">値の取得元となるフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetValues(System.Object[])">
      <summary>レコード内のすべてのフィールドの値を返します。</summary>
      <param name="values">戻り値を格納する配列。</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeUpdatableRecord.HiddenFieldCount">
      <summary>レコード内の非表示フィールド数を返します。SQL Server Compact では、このプロパティは常に 0 を返します。</summary>
      <returns>常に値 0 を返します。</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.IsDBNull(System.Int32)">
      <summary>指定されたフィールドが null かどうかを判断します。</summary>
      <returns>フィールドが null の場合は、true。それ以外の場合は、false。</returns>
      <param name="ordinal">確認するフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.IsSetAsDefault(System.Int32)">
      <summary>指定されたフィールドが基になる既定値を使用するように設定されているかどうかを確認します。</summary>
      <returns>既定値を使用するようにフィールドに設定されている場合は true。それ以外の場合は false。</returns>
      <param name="ordinal">確認するフィールド。</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeUpdatableRecord.Item(System.Int32)">
      <summary>レコード内の特定のフィールドに対するインデクサーとして機能します。</summary>
      <param name="ordinal">レコード内のフィールド (列) の序数。</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeUpdatableRecord.Item(System.String)">
      <summary>レコード内の特定のフィールドに対するインデクサーとして機能します。</summary>
      <param name="name">レコード内のフィールド (列) の名前。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetBoolean(System.Int32,System.Boolean)">
      <summary>指定されたインデックス位置の列に、渡された bool 値を設定します。</summary>
      <param name="ordinal">値を設定するフィールド。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetByte(System.Int32,System.Byte)">
      <summary>指定されたインデックス位置の列に、渡された byte 値を設定します。</summary>
      <param name="ordinal">値を設定するフィールド。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>指定したバッファーから指定した列にバイトの長さをコピーします。コピーは、フィールド内の指定位置から開始されます。</summary>
      <param name="ordinal">設定する列の序数位置。</param>
      <param name="dataIndex">データ コピーを開始する列内の位置。</param>
      <param name="buffer">コピーするデータを格納しているバッファー。</param>
      <param name="bufferIndex">データのコピー元バッファー内のオフセット。</param>
      <param name="length">コピーする最大バイト数。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetChar(System.Int32,System.Char)">
      <summary>指定されたインデックス位置の列に、渡された char 値を設定します。</summary>
      <param name="ordinal">値を設定するフィールド。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>指定したバッファーから指定したフィールドに char の長さをコピーします。コピーは、フィールド内の指定位置から開始されます。</summary>
      <param name="ordinal">設定する列の序数位置。</param>
      <param name="dataIndex">データ コピーを開始する列内の位置。</param>
      <param name="buffer">コピーするデータを格納しているバッファー。</param>
      <param name="bufferIndex">データのコピー元バッファー内のオフセット。</param>
      <param name="length">コピーする最大バイト数。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetDateTime(System.Int32,System.DateTime)">
      <summary>指定されたインデックス位置の列に、渡された DateTime 値を設定します。</summary>
      <param name="ordinal">値を設定するフィールド。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetDecimal(System.Int32,System.Decimal)">
      <summary>指定されたインデックス位置の列に、渡された decimal 値を設定します。</summary>
      <param name="ordinal">値を設定するフィールド。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetDefault(System.Int32)">
      <summary>指定したフィールドに既定値を設定します。</summary>
      <param name="ordinal">設定するフィールド。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetDouble(System.Int32,System.Double)">
      <summary>指定されたインデックス位置の列に、渡された double 値を設定します。</summary>
      <param name="ordinal">値を設定するフィールド。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetFloat(System.Int32,System.Single)">
      <summary>指定されたインデックス位置の列に、渡された float 値を設定します。</summary>
      <param name="ordinal">値を設定するフィールド。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetGuid(System.Int32,System.Guid)">
      <summary>指定されたインデックス位置の列に、渡された GUID 値を設定します。</summary>
      <param name="ordinal">値を設定するフィールド。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetInt16(System.Int32,System.Int16)">
      <summary>指定されたインデックス位置の列に、渡された int16 値を設定します。</summary>
      <param name="ordinal">値を設定するフィールド。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetInt32(System.Int32,System.Int32)">
      <summary>指定されたインデックス位置の列に、渡された int32 値を設定します。</summary>
      <param name="ordinal">値を設定するフィールド。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetInt64(System.Int32,System.Int64)">
      <summary>指定されたインデックス位置の列に、渡された int64 値を設定します。</summary>
      <param name="ordinal">値を設定するフィールド。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetObjectRef(System.Int32,System.Object)">
      <summary>値ではなく参照によって、指定したフィールドの値を設定します。</summary>
      <param name="ordinal">値を設定するフィールド。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlBinary(System.Int32,System.Data.SqlTypes.SqlBinary)">
      <summary>指定されたインデックス位置の列に、渡された SqlBinary 値を設定します。</summary>
      <param name="ordinal">値を設定するフィールド。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlBoolean(System.Int32,System.Data.SqlTypes.SqlBoolean)">
      <summary>指定されたインデックス位置の列に、渡された SqlBool 値を設定します。</summary>
      <param name="ordinal">値を設定するフィールド。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlByte(System.Int32,System.Data.SqlTypes.SqlByte)">
      <summary>指定されたインデックス位置の列に、渡された SqlByte 値を設定します。</summary>
      <param name="ordinal">値を設定するフィールド。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlDateTime(System.Int32,System.Data.SqlTypes.SqlDateTime)">
      <summary>指定されたインデックス位置の列に、渡された SqlDateTime 値を設定します。</summary>
      <param name="ordinal">値を設定するフィールド。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlDecimal(System.Int32,System.Data.SqlTypes.SqlDecimal)">
      <summary>指定されたインデックス位置の列に、渡された SqlDecimal 値を設定します。</summary>
      <param name="ordinal">値を設定するフィールド。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlDouble(System.Int32,System.Data.SqlTypes.SqlDouble)">
      <summary>指定されたインデックス位置の列に、渡された SqlDouble 値を設定します。</summary>
      <param name="ordinal">値を設定するフィールド。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlGuid(System.Int32,System.Data.SqlTypes.SqlGuid)">
      <summary>指定されたインデックス位置の列に、渡された SqlGuid 値を設定します。</summary>
      <param name="ordinal">値を設定するフィールド。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlInt16(System.Int32,System.Data.SqlTypes.SqlInt16)">
      <summary>指定されたインデックス位置の列に、渡された SqlInt16 値を設定します。</summary>
      <param name="ordinal">値を設定するフィールド。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlInt32(System.Int32,System.Data.SqlTypes.SqlInt32)">
      <summary>指定されたインデックス位置の列に、渡された SqlInt32 値を設定します。</summary>
      <param name="ordinal">値を設定するフィールド。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlInt64(System.Int32,System.Data.SqlTypes.SqlInt64)">
      <summary>指定されたインデックス位置の列に、渡された SqlInt64 値を設定します。</summary>
      <param name="ordinal">値を設定するフィールド。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlMoney(System.Int32,System.Data.SqlTypes.SqlMoney)">
      <summary>指定されたインデックス位置の列に、渡された SqlMoney 値を設定します。</summary>
      <param name="ordinal">値を設定するフィールド。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlSingle(System.Int32,System.Data.SqlTypes.SqlSingle)">
      <summary>指定されたインデックス位置の列に、渡された SqlSingle 値を設定します。</summary>
      <param name="ordinal">値を設定するフィールド。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlString(System.Int32,System.Data.SqlTypes.SqlString)">
      <summary>指定されたインデックス位置の列に、渡された SqlString 値を設定します。</summary>
      <param name="ordinal">値を設定するフィールド。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetString(System.Int32,System.String)">
      <summary>指定されたインデックス位置の列に、渡された string 値を設定します。</summary>
      <param name="ordinal">値を設定するフィールド。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetValue(System.Int32,System.Object)">
      <summary>指定されたインデックス位置の列に、渡された値を設定します。</summary>
      <param name="ordinal">値を設定するフィールド。</param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetValues(System.Object[])">
      <summary>レコード内の各フィールドに、渡された配列内の対応する値を設定します。</summary>
      <param name="values">レコード内のフィールドの出現順で設定する値。</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeUpdatableRecord.Updatable">
      <summary>フィールドが更新可能かどうかを表します。</summary>
      <returns>フィールドが更新可能な場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlMetaData">
      <summary>データベースから取得したパラメーターおよび列のメタデータ情報を指定して取得します。このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.#ctor(System.String,System.Data.SqlDbType)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Byte,System.Byte)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Byte,System.Byte,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Type)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Int64,System.Data.SqlTypes.SqlCompareOptions)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Boolean)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Byte)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Byte[])"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Char)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Char[])"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBinary)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBoolean)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlByte)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBytes)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlChars)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDateTime)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDecimal)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDouble)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlGuid)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt16)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt32)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt64)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlMoney)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlSingle)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlString)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.DateTime)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Decimal)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Double)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Guid)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Int16)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Int32)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Int64)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Object)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Single)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.String)"></member>
    <member name="P:System.Data.SqlServerCe.SqlMetaData.CompareOptions"></member>
    <member name="P:System.Data.SqlServerCe.SqlMetaData.DbType"></member>
    <member name="P:System.Data.SqlServerCe.SqlMetaData.LocaleId"></member>
    <member name="P:System.Data.SqlServerCe.SqlMetaData.Max"></member>
    <member name="P:System.Data.SqlServerCe.SqlMetaData.MaxLength"></member>
    <member name="P:System.Data.SqlServerCe.SqlMetaData.Name"></member>
    <member name="P:System.Data.SqlServerCe.SqlMetaData.Precision"></member>
    <member name="P:System.Data.SqlServerCe.SqlMetaData.Scale"></member>
    <member name="P:System.Data.SqlServerCe.SqlMetaData.SqlDbType"></member>
    <member name="P:System.Data.SqlServerCe.SqlMetaData.TypeName"></member>
    <member name="T:System.Data.SqlServerCe.TrackingKeyType">
      <summary>追跡データの識別に使用するキーの型を指定します。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.TrackingKeyType.None">
      <summary>この値は、追跡インフラストラクチャで使用するために予約されています。コードでは使用しないでください。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.TrackingKeyType.PrimaryKey">
      <summary>テーブルに定義されている主キーを使用して、行を一意に識別します。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.TrackingKeyType.Guid">
      <summary>テーブルに定義されているグローバル一意識別子列を使用して、行を一意に識別します。これは、ROWGUIDCOL 属性によって定義される uniqueidentifier データ型の列です。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.TrackingKeyType.Max">
      <summary>この値は、追跡インフラストラクチャで使用するために予約されています。コードでは使用しないでください。</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.TrackingOptions">
      <summary>追跡対象にするテーブルの操作を指定します。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.TrackingOptions.None">
      <summary>この値は、追跡インフラストラクチャで使用するために予約されています。コードでは使用しないでください。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.TrackingOptions.Insert">
      <summary>挿入だけを追跡します。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.TrackingOptions.Update">
      <summary>更新だけを追跡します。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.TrackingOptions.Delete">
      <summary>削除だけを追跡します。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.TrackingOptions.All">
      <summary>すべての操作を追跡します。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.TrackingOptions.Max">
      <summary>この値は、追跡インフラストラクチャで使用するために予約されています。コードでは使用しないでください。</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.ValidateType">
      <summary>実行するデータ検証のタイプを指定します。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ValidateType.NoValidation">
      <summary>検証を実行しないように指定します。これは、既定の設定です。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ValidateType.RowCountOnly">
      <summary>パブリッシュされたデータに対して行数比較を実行するように指定します。</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.VerifyOption">
      <summary>これらのオプションによって、使用するデータベース検証のレベルが決まります。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.VerifyOption.Default">
      <summary>データベース内の各ページのチェックサムを再計算し、その新しいチェックサムと予測される値を比較します。</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.VerifyOption.Enhanced">
      <summary>Default オプションと同じチェックを実行し、インデックスの整合性を検証します。各インデックス エントリがテーブル内に存在し、各テーブル エントリがインデックス内に存在することを確認します。このオプションは、Default オプションよりも時間がかかる、詳細なチェックです。</summary>
    </member>
  </members>
</doc>